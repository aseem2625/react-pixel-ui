import React from 'react';

function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var _global = createCommonjsModule(function (module) {
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
});

var _core = createCommonjsModule(function (module) {
var core = module.exports = { version: '2.6.9' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
});
var _core_1 = _core.version;

var _aFunction = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

// optional / simple context binding

var _ctx = function (fn, that, length) {
  _aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var _isObject = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

var _anObject = function (it) {
  if (!_isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

var _fails = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

// Thank's IE8 for his funny defineProperty
var _descriptors = !_fails(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

var document$1 = _global.document;
// typeof document.createElement is 'object' in old IE
var is = _isObject(document$1) && _isObject(document$1.createElement);
var _domCreate = function (it) {
  return is ? document$1.createElement(it) : {};
};

var _ie8DomDefine = !_descriptors && !_fails(function () {
  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;
});

// 7.1.1 ToPrimitive(input [, PreferredType])

// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
var _toPrimitive = function (it, S) {
  if (!_isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

var dP = Object.defineProperty;

var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  _anObject(O);
  P = _toPrimitive(P, true);
  _anObject(Attributes);
  if (_ie8DomDefine) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var _objectDp = {
	f: f
};

var _propertyDesc = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var _hide = _descriptors ? function (object, key, value) {
  return _objectDp.f(object, key, _propertyDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var hasOwnProperty = {}.hasOwnProperty;
var _has = function (it, key) {
  return hasOwnProperty.call(it, key);
};

var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] : (_global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && _has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? _ctx(out, _global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) _hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
var _export = $export;

var toString = {}.toString;

var _cof = function (it) {
  return toString.call(it).slice(8, -1);
};

// fallback for non-array-like ES3 and non-enumerable old V8 strings

// eslint-disable-next-line no-prototype-builtins
var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return _cof(it) == 'String' ? it.split('') : Object(it);
};

// 7.2.1 RequireObjectCoercible(argument)
var _defined = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

// to indexed object, toObject with fallback for non-array-like ES3 strings


var _toIobject = function (it) {
  return _iobject(_defined(it));
};

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
var _toInteger = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

// 7.1.15 ToLength

var min = Math.min;
var _toLength = function (it) {
  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

var max = Math.max;
var min$1 = Math.min;
var _toAbsoluteIndex = function (index, length) {
  index = _toInteger(index);
  return index < 0 ? max(index + length, 0) : min$1(index, length);
};

// false -> Array#indexOf
// true  -> Array#includes



var _arrayIncludes = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = _toIobject($this);
    var length = _toLength(O.length);
    var index = _toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var _library = true;

var _shared = createCommonjsModule(function (module) {
var SHARED = '__core-js_shared__';
var store = _global[SHARED] || (_global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: _core.version,
  mode: 'pure',
  copyright: 'Â© 2019 Denis Pushkarev (zloirock.ru)'
});
});

var id = 0;
var px = Math.random();
var _uid = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

var shared = _shared('keys');

var _sharedKey = function (key) {
  return shared[key] || (shared[key] = _uid(key));
};

var arrayIndexOf = _arrayIncludes(false);
var IE_PROTO = _sharedKey('IE_PROTO');

var _objectKeysInternal = function (object, names) {
  var O = _toIobject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (_has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

// IE 8- don't enum bug keys
var _enumBugKeys = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

// 19.1.2.14 / 15.2.3.14 Object.keys(O)



var _objectKeys = Object.keys || function keys(O) {
  return _objectKeysInternal(O, _enumBugKeys);
};

var f$1 = Object.getOwnPropertySymbols;

var _objectGops = {
	f: f$1
};

var f$2 = {}.propertyIsEnumerable;

var _objectPie = {
	f: f$2
};

// 7.1.13 ToObject(argument)

var _toObject = function (it) {
  return Object(_defined(it));
};

// 19.1.2.1 Object.assign(target, source, ...)






var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
var _objectAssign = !$assign || _fails(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = _toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = _objectGops.f;
  var isEnum = _objectPie.f;
  while (aLen > index) {
    var S = _iobject(arguments[index++]);
    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!_descriptors || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

// 19.1.3.1 Object.assign(target, source)


_export(_export.S + _export.F, 'Object', { assign: _objectAssign });

var assign = _core.Object.assign;

var assign$1 = assign;

var _extends_1 = createCommonjsModule(function (module) {
function _extends() {
  module.exports = _extends = assign$1 || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

module.exports = _extends;
});

// most Object methods by ES6 should accept primitives



var _objectSap = function (KEY, exec) {
  var fn = (_core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  _export(_export.S + _export.F * _fails(function () { fn(1); }), 'Object', exp);
};

// 19.1.2.14 Object.keys(O)



_objectSap('keys', function () {
  return function keys(it) {
    return _objectKeys(_toObject(it));
  };
});

var keys = _core.Object.keys;

var keys$1 = keys;

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};

  var sourceKeys = keys$1(source);

  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var objectWithoutPropertiesLoose = _objectWithoutPropertiesLoose;

var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
  _anObject(O);
  var keys = _objectKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);
  return O;
};

var document$2 = _global.document;
var _html = document$2 && document$2.documentElement;

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])



var IE_PROTO$1 = _sharedKey('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE$1 = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = _domCreate('iframe');
  var i = _enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  _html.appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];
  return createDict();
};

var _objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE$1] = _anObject(O);
    result = new Empty();
    Empty[PROTOTYPE$1] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$1] = O;
  } else result = createDict();
  return Properties === undefined ? result : _objectDps(result, Properties);
};

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
_export(_export.S, 'Object', { create: _objectCreate });

var $Object = _core.Object;
var create = function create(P, D) {
  return $Object.create(P, D);
};

var create$1 = create;

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = create$1(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var inheritsLoose = _inheritsLoose;

var _global$1 = createCommonjsModule(function (module) {
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
});

var _isObject$1 = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

var _anObject$1 = function (it) {
  if (!_isObject$1(it)) throw TypeError(it + ' is not an object!');
  return it;
};

var _aFunction$1 = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

// optional / simple context binding

var _ctx$1 = function (fn, that, length) {
  _aFunction$1(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var f$3 = {}.propertyIsEnumerable;

var _objectPie$1 = {
	f: f$3
};

var _propertyDesc$1 = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var toString$1 = {}.toString;

var _cof$1 = function (it) {
  return toString$1.call(it).slice(8, -1);
};

// fallback for non-array-like ES3 and non-enumerable old V8 strings

// eslint-disable-next-line no-prototype-builtins
var _iobject$1 = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return _cof$1(it) == 'String' ? it.split('') : Object(it);
};

// 7.2.1 RequireObjectCoercible(argument)
var _defined$1 = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

// to indexed object, toObject with fallback for non-array-like ES3 strings


var _toIobject$1 = function (it) {
  return _iobject$1(_defined$1(it));
};

// 7.1.1 ToPrimitive(input [, PreferredType])

// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
var _toPrimitive$1 = function (it, S) {
  if (!_isObject$1(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !_isObject$1(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !_isObject$1(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !_isObject$1(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

var hasOwnProperty$1 = {}.hasOwnProperty;
var _has$1 = function (it, key) {
  return hasOwnProperty$1.call(it, key);
};

var _fails$1 = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

// Thank's IE8 for his funny defineProperty
var _descriptors$1 = !_fails$1(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

var document$3 = _global$1.document;
// typeof document.createElement is 'object' in old IE
var is$1 = _isObject$1(document$3) && _isObject$1(document$3.createElement);
var _domCreate$1 = function (it) {
  return is$1 ? document$3.createElement(it) : {};
};

var _ie8DomDefine$1 = !_descriptors$1 && !_fails$1(function () {
  return Object.defineProperty(_domCreate$1('div'), 'a', { get: function () { return 7; } }).a != 7;
});

var gOPD = Object.getOwnPropertyDescriptor;

var f$4 = _descriptors$1 ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = _toIobject$1(O);
  P = _toPrimitive$1(P, true);
  if (_ie8DomDefine$1) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (_has$1(O, P)) return _propertyDesc$1(!_objectPie$1.f.call(O, P), O[P]);
};

var _objectGopd = {
	f: f$4
};

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */


var check = function (O, proto) {
  _anObject$1(O);
  if (!_isObject$1(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
var _setProto = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = _ctx$1(Function.call, _objectGopd.f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

var setPrototypeOf = _setProto.set;
var _inheritIfRequired = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && _isObject$1(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};

var dP$1 = Object.defineProperty;

var f$5 = _descriptors$1 ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  _anObject$1(O);
  P = _toPrimitive$1(P, true);
  _anObject$1(Attributes);
  if (_ie8DomDefine$1) try {
    return dP$1(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var _objectDp$1 = {
	f: f$5
};

// 7.1.4 ToInteger
var ceil$1 = Math.ceil;
var floor$1 = Math.floor;
var _toInteger$1 = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor$1 : ceil$1)(it);
};

// 7.1.15 ToLength

var min$2 = Math.min;
var _toLength$1 = function (it) {
  return it > 0 ? min$2(_toInteger$1(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

var max$1 = Math.max;
var min$3 = Math.min;
var _toAbsoluteIndex$1 = function (index, length) {
  index = _toInteger$1(index);
  return index < 0 ? max$1(index + length, 0) : min$3(index, length);
};

// false -> Array#indexOf
// true  -> Array#includes



var _arrayIncludes$1 = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = _toIobject$1($this);
    var length = _toLength$1(O.length);
    var index = _toAbsoluteIndex$1(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var _core$1 = createCommonjsModule(function (module) {
var core = module.exports = { version: '2.6.9' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
});
var _core_1$1 = _core$1.version;

var _shared$1 = createCommonjsModule(function (module) {
var SHARED = '__core-js_shared__';
var store = _global$1[SHARED] || (_global$1[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: _core$1.version,
  mode: 'global',
  copyright: 'Â© 2019 Denis Pushkarev (zloirock.ru)'
});
});

var id$1 = 0;
var px$1 = Math.random();
var _uid$1 = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id$1 + px$1).toString(36));
};

var shared$1 = _shared$1('keys');

var _sharedKey$1 = function (key) {
  return shared$1[key] || (shared$1[key] = _uid$1(key));
};

var arrayIndexOf$1 = _arrayIncludes$1(false);
var IE_PROTO$2 = _sharedKey$1('IE_PROTO');

var _objectKeysInternal$1 = function (object, names) {
  var O = _toIobject$1(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO$2) _has$1(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (_has$1(O, key = names[i++])) {
    ~arrayIndexOf$1(result, key) || result.push(key);
  }
  return result;
};

// IE 8- don't enum bug keys
var _enumBugKeys$1 = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)

var hiddenKeys = _enumBugKeys$1.concat('length', 'prototype');

var f$6 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return _objectKeysInternal$1(O, hiddenKeys);
};

var _objectGopn = {
	f: f$6
};

var _wks = createCommonjsModule(function (module) {
var store = _shared$1('wks');

var Symbol = _global$1.Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid$1)('Symbol.' + name));
};

$exports.store = store;
});

// 7.2.8 IsRegExp(argument)


var MATCH = _wks('match');
var _isRegexp = function (it) {
  var isRegExp;
  return _isObject$1(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof$1(it) == 'RegExp');
};

// 21.2.5.3 get RegExp.prototype.flags

var _flags = function () {
  var that = _anObject$1(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};

var _hide$1 = _descriptors$1 ? function (object, key, value) {
  return _objectDp$1.f(object, key, _propertyDesc$1(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var _functionToString = _shared$1('native-function-to-string', Function.toString);

var _redefine = createCommonjsModule(function (module) {
var SRC = _uid$1('src');

var TO_STRING = 'toString';
var TPL = ('' + _functionToString).split(TO_STRING);

_core$1.inspectSource = function (it) {
  return _functionToString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) _has$1(val, 'name') || _hide$1(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) _has$1(val, SRC) || _hide$1(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === _global$1) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    _hide$1(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    _hide$1(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || _functionToString.call(this);
});
});

var SPECIES = _wks('species');

var _setSpecies = function (KEY) {
  var C = _global$1[KEY];
  if (_descriptors$1 && C && !C[SPECIES]) _objectDp$1.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};

var dP$2 = _objectDp$1.f;
var gOPN = _objectGopn.f;


var $RegExp = _global$1.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var CORRECT_NEW = new $RegExp(re1) !== re1;

if (_descriptors$1 && (!CORRECT_NEW || _fails$1(function () {
  re2[_wks('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = _isRegexp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : _inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? _flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function (key) {
    key in $RegExp || dP$2($RegExp, key, {
      configurable: true,
      get: function () { return Base[key]; },
      set: function (it) { Base[key] = it; }
    });
  };
  for (var keys$2 = gOPN(Base), i = 0; keys$2.length > i;) proxy(keys$2[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  _redefine(_global$1, 'RegExp', $RegExp);
}

_setSpecies('RegExp');

// getting tag from 19.1.3.6 Object.prototype.toString()

var TAG = _wks('toStringTag');
// ES3 wrong here
var ARG = _cof$1(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

var _classof = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? _cof$1(O)
    // ES3 arguments fallback
    : (B = _cof$1(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

var PROTOTYPE$2 = 'prototype';

var $export$1 = function (type, name, source) {
  var IS_FORCED = type & $export$1.F;
  var IS_GLOBAL = type & $export$1.G;
  var IS_STATIC = type & $export$1.S;
  var IS_PROTO = type & $export$1.P;
  var IS_BIND = type & $export$1.B;
  var target = IS_GLOBAL ? _global$1 : IS_STATIC ? _global$1[name] || (_global$1[name] = {}) : (_global$1[name] || {})[PROTOTYPE$2];
  var exports = IS_GLOBAL ? _core$1 : _core$1[name] || (_core$1[name] = {});
  var expProto = exports[PROTOTYPE$2] || (exports[PROTOTYPE$2] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? _ctx$1(out, _global$1) : IS_PROTO && typeof out == 'function' ? _ctx$1(Function.call, out) : out;
    // extend global
    if (target) _redefine(target, key, out, type & $export$1.U);
    // export
    if (exports[key] != out) _hide$1(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
_global$1.core = _core$1;
// type bitmap
$export$1.F = 1;   // forced
$export$1.G = 2;   // global
$export$1.S = 4;   // static
$export$1.P = 8;   // proto
$export$1.B = 16;  // bind
$export$1.W = 32;  // wrap
$export$1.U = 64;  // safe
$export$1.R = 128; // real proto method for `library`
var _export$1 = $export$1;

var _anInstance = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

// call something on iterator step with safe closing on error

var _iterCall = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(_anObject$1(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) _anObject$1(ret.call(iterator));
    throw e;
  }
};

var _iterators = {};

// check on default Array iterator

var ITERATOR = _wks('iterator');
var ArrayProto = Array.prototype;

var _isArrayIter = function (it) {
  return it !== undefined && (_iterators.Array === it || ArrayProto[ITERATOR] === it);
};

var ITERATOR$1 = _wks('iterator');

var core_getIteratorMethod = _core$1.getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR$1]
    || it['@@iterator']
    || _iterators[_classof(it)];
};

var _forOf = createCommonjsModule(function (module) {
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : core_getIteratorMethod(iterable);
  var f = _ctx$1(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (_isArrayIter(iterFn)) for (length = _toLength$1(iterable.length); length > index; index++) {
    result = entries ? f(_anObject$1(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = _iterCall(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;
});

// 7.3.20 SpeciesConstructor(O, defaultConstructor)


var SPECIES$1 = _wks('species');
var _speciesConstructor = function (O, D) {
  var C = _anObject$1(O).constructor;
  var S;
  return C === undefined || (S = _anObject$1(C)[SPECIES$1]) == undefined ? D : _aFunction$1(S);
};

// fast apply, http://jsperf.lnkit.com/fast-apply/5
var _invoke = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};

var document$4 = _global$1.document;
var _html$1 = document$4 && document$4.documentElement;

var process = _global$1.process;
var setTask = _global$1.setImmediate;
var clearTask = _global$1.clearImmediate;
var MessageChannel = _global$1.MessageChannel;
var Dispatch = _global$1.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      _invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (_cof$1(process) == 'process') {
    defer = function (id) {
      process.nextTick(_ctx$1(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(_ctx$1(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = _ctx$1(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (_global$1.addEventListener && typeof postMessage == 'function' && !_global$1.importScripts) {
    defer = function (id) {
      _global$1.postMessage(id + '', '*');
    };
    _global$1.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in _domCreate$1('script')) {
    defer = function (id) {
      _html$1.appendChild(_domCreate$1('script'))[ONREADYSTATECHANGE] = function () {
        _html$1.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(_ctx$1(run, id, 1), 0);
    };
  }
}
var _task = {
  set: setTask,
  clear: clearTask
};

var macrotask = _task.set;
var Observer = _global$1.MutationObserver || _global$1.WebKitMutationObserver;
var process$1 = _global$1.process;
var Promise$1 = _global$1.Promise;
var isNode = _cof$1(process$1) == 'process';

var _microtask = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process$1.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process$1.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(_global$1.navigator && _global$1.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise$1 && Promise$1.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise$1.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(_global$1, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};

// 25.4.1.5 NewPromiseCapability(C)


function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = _aFunction$1(resolve);
  this.reject = _aFunction$1(reject);
}

var f$7 = function (C) {
  return new PromiseCapability(C);
};

var _newPromiseCapability = {
	f: f$7
};

var _perform = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};

var navigator = _global$1.navigator;

var _userAgent = navigator && navigator.userAgent || '';

var _promiseResolve = function (C, x) {
  _anObject$1(C);
  if (_isObject$1(x) && x.constructor === C) return x;
  var promiseCapability = _newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

var _redefineAll = function (target, src, safe) {
  for (var key in src) _redefine(target, key, src[key], safe);
  return target;
};

var def = _objectDp$1.f;

var TAG$1 = _wks('toStringTag');

var _setToStringTag = function (it, tag, stat) {
  if (it && !_has$1(it = stat ? it : it.prototype, TAG$1)) def(it, TAG$1, { configurable: true, value: tag });
};

var ITERATOR$2 = _wks('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR$2]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

var _iterDetect = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR$2]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR$2] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};

var task = _task.set;
var microtask = _microtask();




var PROMISE = 'Promise';
var TypeError$1 = _global$1.TypeError;
var process$2 = _global$1.process;
var versions = process$2 && process$2.versions;
var v8 = versions && versions.v8 || '';
var $Promise = _global$1[PROMISE];
var isNode$1 = _classof(process$2) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = _newPromiseCapability.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[_wks('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode$1 || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && _userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return _isObject$1(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError$1('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(_global$1, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = _perform(function () {
        if (isNode$1) {
          process$2.emit('unhandledRejection', value, promise);
        } else if (handler = _global$1.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = _global$1.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode$1 || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(_global$1, function () {
    var handler;
    if (isNode$1) {
      process$2.emit('rejectionHandled', promise);
    } else if (handler = _global$1.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError$1("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, _ctx$1($resolve, wrapper, 1), _ctx$1($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    _anInstance(this, $Promise, PROMISE, '_h');
    _aFunction$1(executor);
    Internal.call(this);
    try {
      executor(_ctx$1($resolve, this, 1), _ctx$1($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = _redefineAll($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(_speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode$1 ? process$2.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = _ctx$1($resolve, promise, 1);
    this.reject = _ctx$1($reject, promise, 1);
  };
  _newPromiseCapability.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

_export$1(_export$1.G + _export$1.W + _export$1.F * !USE_NATIVE, { Promise: $Promise });
_setToStringTag($Promise, PROMISE);
_setSpecies(PROMISE);
Wrapper = _core$1[PROMISE];

// statics
_export$1(_export$1.S + _export$1.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
_export$1(_export$1.S + _export$1.F * (!USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return _promiseResolve(this, x);
  }
});
_export$1(_export$1.S + _export$1.F * !(USE_NATIVE && _iterDetect(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = _perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      _forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = _perform(function () {
      _forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});

// 19.1.3.6 Object.prototype.toString()

var test = {};
test[_wks('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  _redefine(Object.prototype, 'toString', function toString() {
    return '[object ' + _classof(this) + ']';
  }, true);
}

// 7.2.9 SameValue(x, y)
var _sameValue = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};

var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
var _regexpExecAbstract = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (_classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', _flags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

var _regexpExec = patchedExec;

_export$1({
  target: 'RegExp',
  proto: true,
  forced: _regexpExec !== /./.exec
}, {
  exec: _regexpExec
});

var SPECIES$2 = _wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !_fails$1(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

var _fixReWks = function (KEY, length, exec) {
  var SYMBOL = _wks(KEY);

  var DELEGATES_TO_SYMBOL = !_fails$1(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !_fails$1(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES$2] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      _defined$1,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === _regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    _redefine(String.prototype, KEY, strfn);
    _hide$1(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};

// @@search logic
_fixReWks('search', 1, function (defined, SEARCH, $search, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
    function (regexp) {
      var res = maybeCallNative($search, regexp, this);
      if (res.done) return res.value;
      var rx = _anObject$1(regexp);
      var S = String(this);
      var previousLastIndex = rx.lastIndex;
      if (!_sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = _regexpExecAbstract(rx, S);
      if (!_sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = _wks('unscopables');
var ArrayProto$1 = Array.prototype;
if (ArrayProto$1[UNSCOPABLES] == undefined) _hide$1(ArrayProto$1, UNSCOPABLES, {});
var _addToUnscopables = function (key) {
  ArrayProto$1[UNSCOPABLES][key] = true;
};

var _iterStep = function (done, value) {
  return { value: value, done: !!done };
};

// 19.1.2.14 / 15.2.3.14 Object.keys(O)



var _objectKeys$1 = Object.keys || function keys(O) {
  return _objectKeysInternal$1(O, _enumBugKeys$1);
};

var _objectDps$1 = _descriptors$1 ? Object.defineProperties : function defineProperties(O, Properties) {
  _anObject$1(O);
  var keys = _objectKeys$1(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) _objectDp$1.f(O, P = keys[i++], Properties[P]);
  return O;
};

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])



var IE_PROTO$3 = _sharedKey$1('IE_PROTO');
var Empty$1 = function () { /* empty */ };
var PROTOTYPE$3 = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict$1 = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = _domCreate$1('iframe');
  var i = _enumBugKeys$1.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  _html$1.appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict$1 = iframeDocument.F;
  while (i--) delete createDict$1[PROTOTYPE$3][_enumBugKeys$1[i]];
  return createDict$1();
};

var _objectCreate$1 = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty$1[PROTOTYPE$3] = _anObject$1(O);
    result = new Empty$1();
    Empty$1[PROTOTYPE$3] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$3] = O;
  } else result = createDict$1();
  return Properties === undefined ? result : _objectDps$1(result, Properties);
};

var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
_hide$1(IteratorPrototype, _wks('iterator'), function () { return this; });

var _iterCreate = function (Constructor, NAME, next) {
  Constructor.prototype = _objectCreate$1(IteratorPrototype, { next: _propertyDesc$1(1, next) });
  _setToStringTag(Constructor, NAME + ' Iterator');
};

// 7.1.13 ToObject(argument)

var _toObject$1 = function (it) {
  return Object(_defined$1(it));
};

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)


var IE_PROTO$4 = _sharedKey$1('IE_PROTO');
var ObjectProto = Object.prototype;

var _objectGpo = Object.getPrototypeOf || function (O) {
  O = _toObject$1(O);
  if (_has$1(O, IE_PROTO$4)) return O[IE_PROTO$4];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

var ITERATOR$3 = _wks('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

var _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  _iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR$3] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = _objectGpo($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      _setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (typeof IteratorPrototype[ITERATOR$3] != 'function') _hide$1(IteratorPrototype, ITERATOR$3, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if (BUGGY || VALUES_BUG || !proto[ITERATOR$3]) {
    _hide$1(proto, ITERATOR$3, $default);
  }
  // Plug for library
  _iterators[NAME] = $default;
  _iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) _redefine(proto, key, methods[key]);
    } else _export$1(_export$1.P + _export$1.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
var es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {
  this._t = _toIobject$1(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return _iterStep(1);
  }
  if (kind == 'keys') return _iterStep(0, index);
  if (kind == 'values') return _iterStep(0, O[index]);
  return _iterStep(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
_iterators.Arguments = _iterators.Array;

_addToUnscopables('keys');
_addToUnscopables('values');
_addToUnscopables('entries');

var ITERATOR$4 = _wks('iterator');
var TO_STRING_TAG = _wks('toStringTag');
var ArrayValues = _iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = _objectKeys$1(DOMIterables), i$1 = 0; i$1 < collections.length; i$1++) {
  var NAME = collections[i$1];
  var explicit = DOMIterables[NAME];
  var Collection = _global$1[NAME];
  var proto$1 = Collection && Collection.prototype;
  var key;
  if (proto$1) {
    if (!proto$1[ITERATOR$4]) _hide$1(proto$1, ITERATOR$4, ArrayValues);
    if (!proto$1[TO_STRING_TAG]) _hide$1(proto$1, TO_STRING_TAG, NAME);
    _iterators[NAME] = ArrayValues;
    if (explicit) for (key in es6_array_iterator) if (!proto$1[key]) _redefine(proto$1, key, es6_array_iterator[key], true);
  }
}

// most Object methods by ES6 should accept primitives



var _objectSap$1 = function (KEY, exec) {
  var fn = (_core$1.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  _export$1(_export$1.S + _export$1.F * _fails$1(function () { fn(1); }), 'Object', exp);
};

// 19.1.2.14 Object.keys(O)



_objectSap$1('keys', function () {
  return function keys(it) {
    return _objectKeys$1(_toObject$1(it));
  };
});

// true  -> String#at
// false -> String#codePointAt
var _stringAt = function (TO_STRING) {
  return function (that, pos) {
    var s = String(_defined$1(that));
    var i = _toInteger$1(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

var at = _stringAt(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
var _advanceStringIndex = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};

var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX$1 = 'lastIndex';
var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !_fails$1(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
_fixReWks('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!_isRegexp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = _regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX$1];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX$1] === match.index) separatorCopy[LAST_INDEX$1]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = defined(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
      if (res.done) return res.value;

      var rx = _anObject$1(regexp);
      var S = String(this);
      var C = _speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return _regexpExecAbstract(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = _regexpExecAbstract(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = $min(_toLength$1(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = _advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
});

var es6_regexp_split = {

};

var jsAwesomeUtils = createCommonjsModule(function (module, exports) {
function createCommonjsModule(e,o){return e(o={exports:{}},o.exports),o.exports}Object.defineProperty(exports,"__esModule",{value:!0}),es6_regexp_split;var polyfill_1=createCommonjsModule(function(e,o){e.exports={polyfill:function(){var e=window,o=document;if(!("scrollBehavior"in o.documentElement.style&&!0!==e.__forceSmoothScrollPolyfill__)){var t,r=e.HTMLElement||e.Element,l=468,n={scroll:e.scroll||e.scrollTo,elementScroll:r.prototype.scroll||c,scrollIntoView:r.prototype.scrollIntoView},s=e.performance&&e.performance.now?e.performance.now.bind(e.performance):Date.now,i=(t=e.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(t)?1:0);e.scroll=e.scrollTo=function(){void 0!==arguments[0]&&(!0!==a(arguments[0])?m.call(e,o.body,void 0!==arguments[0].left?~~arguments[0].left:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:e.scrollY||e.pageYOffset):n.scroll.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:e.scrollY||e.pageYOffset));},r.prototype.scroll=r.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==a(arguments[0])){var e=arguments[0].left,o=arguments[0].top;m.call(this,this,void 0===e?this.scrollLeft:~~e,void 0===o?this.scrollTop:~~o);}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");n.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop);}},r.prototype.scrollIntoView=function(){if(!0!==a(arguments[0])){var t=function(e){for(;e!==o.body&&!1===p(e);)e=e.parentNode||e.host;return e}(this),r=t.getBoundingClientRect(),l=this.getBoundingClientRect();t!==o.body?(m.call(this,t,t.scrollLeft+l.left-r.left,t.scrollTop+l.top-r.top),"fixed"!==e.getComputedStyle(t).position&&e.scrollBy({left:r.left,top:r.top,behavior:"smooth"})):e.scrollBy({left:l.left,top:l.top,behavior:"smooth"});}else n.scrollIntoView.call(this,void 0===arguments[0]||arguments[0]);};}function c(e,o){this.scrollLeft=e,this.scrollTop=o;}function a(e){if(null===e||"object"!=typeof e||void 0===e.behavior||"auto"===e.behavior||"instant"===e.behavior)return !0;if("object"==typeof e&&"smooth"===e.behavior)return !1;throw new TypeError("behavior member of ScrollOptions "+e.behavior+" is not a valid value for enumeration ScrollBehavior.")}function u(e,o){return "Y"===o?e.clientHeight+i<e.scrollHeight:"X"===o?e.clientWidth+i<e.scrollWidth:void 0}function f(o,t){var r=e.getComputedStyle(o,null)["overflow"+t];return "auto"===r||"scroll"===r}function p(e){var o=u(e,"Y")&&f(e,"Y"),t=u(e,"X")&&f(e,"X");return o||t}function d(o){var t,r,n,i,c=(s()-o.startTime)/l;i=c=c>1?1:c,t=.5*(1-Math.cos(Math.PI*i)),r=o.startX+(o.x-o.startX)*t,n=o.startY+(o.y-o.startY)*t,o.method.call(o.scrollable,r,n),r===o.x&&n===o.y||e.requestAnimationFrame(d.bind(e,o));}function m(t,r,l){var i,a,u,f,p=s();t===o.body?(i=e,a=e.scrollX||e.pageXOffset,u=e.scrollY||e.pageYOffset,f=n.scroll):(i=t,a=t.scrollLeft,u=t.scrollTop,f=c),d({scrollable:i,method:f,startTime:p,startX:a,startY:u,x:r,y:l});}}};});function scrollToEl(e){var o=document.getElementById(e)||document.getElementsByName(e)[0];if(o){var t=o.offsetTop;return window.scroll({top:t,left:0,behavior:"smooth"}),!0}}var scrollToHash=function(e,o){var t;e?(e&&e.preventDefault(),t=o,window.location.hash=t):t=window.location.hash,scrollToEl(t.substr(1));};function debounce(e,o){void 0===o&&(o=0);var t=null;return function(){window.clearTimeout(t);for(var r=arguments.length,l=new Array(r),n=0;n<r;n++)l[n]=arguments[n];t=window.setTimeout(e.bind.apply(e,[this].concat(l)),o);}}function throttle(e,o){void 0===o&&(o=0);var t=null;return function(){for(var r=this,l=arguments.length,n=new Array(l),s=0;s<l;s++)n[s]=arguments[s];t||(t=setTimeout(function(o){t=null,e.call.apply(e,[r].concat(n));},o));}}var mockAPI=function(e,o,t){return void 0===o&&(o=!0),void 0===t&&(t=1500),new Promise(function(r,l){setTimeout(function(t){o?r(e):l(e);},t);})};function getShortenedNumber(e,o){void 0===e&&(e=null),void 0===o&&(o=1);if(e||0===e)return e>=1e7?(e/1e7).toFixed(o)+" Cr":e>=1e5?(e/1e5).toFixed(o)+" L":e>=1e3?(e/1e3).toFixed(o)+" K":e!==Math.floor(e)?""+e.toFixed(o):""+e}function stringToTitleCase(e,o){return void 0===e&&(e=""),void 0===o&&(o=" "),e.trim().split(o).map(titleCase).join(" ")}function snakeCaseToTitleCase(e,o){return stringToTitleCase(string,"_")}function classList(){for(var e=[],o=arguments.length,t=new Array(o),r=0;r<o;r++)t[r]=arguments[r];for(var l=0;l<t.length;l++)t[l]&&(t[l]instanceof Array&&(t[l]=t[l].join(" ")),e.push(t[l]));return e.join(" ")}function prefixToClasses(e,o){return void 0===o&&(o=""),o?o.split(" ").reduce(function(o,t){return t.trim()&&o.push(e+t),o},[]).join(" "):""}function obj2query(e){var o=makeQueryObject(e);return Object.keys(o).map(function(e){return encodeURIComponent(e)+"="+encodeURIComponent(o[e])}).join("&")}function query2obj(e){var o={};return e.split(/=|&/).forEach(function(e,t,r){t%2&&(o[r[t-1]]=decodeURIComponent(e));}),o}var getQueryParams=function(e){return void 0===e&&(e=location.search),isString(e)?query2obj(e.slice(1)):{}};exports.classList=classList,exports.debounce=debounce,exports.getQueryParams=getQueryParams,exports.getShortenedNumber=getShortenedNumber,exports.mockAPI=mockAPI,exports.obj2query=obj2query,exports.prefixToClasses=prefixToClasses,exports.query2obj=query2obj,exports.scrollToEl=scrollToEl,exports.scrollToHash=scrollToHash,exports.snakeCaseToTitleCase=snakeCaseToTitleCase,exports.stringToTitleCase=stringToTitleCase,exports.throttle=throttle;

});

unwrapExports(jsAwesomeUtils);
var jsAwesomeUtils_1 = jsAwesomeUtils.classList;
var jsAwesomeUtils_2 = jsAwesomeUtils.debounce;
var jsAwesomeUtils_3 = jsAwesomeUtils.getQueryParams;
var jsAwesomeUtils_4 = jsAwesomeUtils.getShortenedNumber;
var jsAwesomeUtils_5 = jsAwesomeUtils.mockAPI;
var jsAwesomeUtils_6 = jsAwesomeUtils.obj2query;
var jsAwesomeUtils_7 = jsAwesomeUtils.prefixToClasses;
var jsAwesomeUtils_8 = jsAwesomeUtils.query2obj;
var jsAwesomeUtils_9 = jsAwesomeUtils.scrollToEl;
var jsAwesomeUtils_10 = jsAwesomeUtils.scrollToHash;
var jsAwesomeUtils_11 = jsAwesomeUtils.snakeCaseToTitleCase;
var jsAwesomeUtils_12 = jsAwesomeUtils.stringToTitleCase;
var jsAwesomeUtils_13 = jsAwesomeUtils.throttle;

var Button =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(Button, _React$PureComponent);

  function Button() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto = Button.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        isRound = _this$props.isRound,
        isLink = _this$props.isLink,
        isPrimary = _this$props.isPrimary,
        iconBefore = _this$props.iconBefore,
        iconAfter = _this$props.iconAfter,
        children = _this$props.children,
        onClick = _this$props.onClick,
        className = _this$props.className,
        restProps = objectWithoutPropertiesLoose(_this$props, ["isRound", "isLink", "isPrimary", "iconBefore", "iconAfter", "children", "onClick", "className"]);

    var classes = jsAwesomeUtils_1('Btn', className && jsAwesomeUtils_7('Btn--', className), !isLink && isRound && 'Btn--round', isLink && 'Btn--link', !isLink && isPrimary && 'Btn--primary');
    return React.createElement("button", _extends_1({}, restProps, {
      onClick: restProps.disabled ? undefined : onClick,
      className: classes
    }), iconBefore && React.createElement("i", {
      className: 'Btn-icon Btn-icon--before i-' + iconBefore
    }), children, iconAfter && React.createElement("i", {
      className: 'Btn-icon Btn-icon--after i-' + iconAfter
    }));
  };

  return Button;
}(React.PureComponent);

// true  -> String#at
// false -> String#codePointAt
var _stringAt$1 = function (TO_STRING) {
  return function (that, pos) {
    var s = String(_defined(that));
    var i = _toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

var _redefine$1 = _hide;

var _iterators$1 = {};

var _wks$1 = createCommonjsModule(function (module) {
var store = _shared('wks');

var Symbol = _global.Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));
};

$exports.store = store;
});

var def$1 = _objectDp.f;

var TAG$2 = _wks$1('toStringTag');

var _setToStringTag$1 = function (it, tag, stat) {
  if (it && !_has(it = stat ? it : it.prototype, TAG$2)) def$1(it, TAG$2, { configurable: true, value: tag });
};

var IteratorPrototype$1 = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
_hide(IteratorPrototype$1, _wks$1('iterator'), function () { return this; });

var _iterCreate$1 = function (Constructor, NAME, next) {
  Constructor.prototype = _objectCreate(IteratorPrototype$1, { next: _propertyDesc(1, next) });
  _setToStringTag$1(Constructor, NAME + ' Iterator');
};

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)


var IE_PROTO$5 = _sharedKey('IE_PROTO');
var ObjectProto$1 = Object.prototype;

var _objectGpo$1 = Object.getPrototypeOf || function (O) {
  O = _toObject(O);
  if (_has(O, IE_PROTO$5)) return O[IE_PROTO$5];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto$1 : null;
};

var ITERATOR$5 = _wks$1('iterator');
var BUGGY$1 = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR$1 = '@@iterator';
var KEYS$1 = 'keys';
var VALUES$1 = 'values';

var returnThis$1 = function () { return this; };

var _iterDefine$1 = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  _iterCreate$1(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY$1 && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS$1: return function keys() { return new Constructor(this, kind); };
      case VALUES$1: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES$1;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR$5] || proto[FF_ITERATOR$1] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = _objectGpo$1($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      _setToStringTag$1(IteratorPrototype, TAG, true);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES$1) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((FORCED) && (BUGGY$1 || VALUES_BUG || !proto[ITERATOR$5])) {
    _hide(proto, ITERATOR$5, $default);
  }
  // Plug for library
  _iterators$1[NAME] = $default;
  _iterators$1[TAG] = returnThis$1;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES$1),
      keys: IS_SET ? $default : getMethod(KEYS$1),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) _redefine$1(proto, key, methods[key]);
    } else _export(_export.P + _export.F * (BUGGY$1 || VALUES_BUG), NAME, methods);
  }
  return methods;
};

var $at = _stringAt$1(true);

// 21.1.3.27 String.prototype[@@iterator]()
_iterDefine$1(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

var _iterStep$1 = function (done, value) {
  return { value: value, done: !!done };
};

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
var es6_array_iterator$1 = _iterDefine$1(Array, 'Array', function (iterated, kind) {
  this._t = _toIobject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return _iterStep$1(1);
  }
  if (kind == 'keys') return _iterStep$1(0, index);
  if (kind == 'values') return _iterStep$1(0, O[index]);
  return _iterStep$1(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
_iterators$1.Arguments = _iterators$1.Array;

var TO_STRING_TAG$1 = _wks$1('toStringTag');

var DOMIterables$1 = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i$2 = 0; i$2 < DOMIterables$1.length; i$2++) {
  var NAME$1 = DOMIterables$1[i$2];
  var Collection$1 = _global[NAME$1];
  var proto$2 = Collection$1 && Collection$1.prototype;
  if (proto$2 && !proto$2[TO_STRING_TAG$1]) _hide(proto$2, TO_STRING_TAG$1, NAME$1);
  _iterators$1[NAME$1] = _iterators$1.Array;
}

// getting tag from 19.1.3.6 Object.prototype.toString()

var TAG$3 = _wks$1('toStringTag');
// ES3 wrong here
var ARG$1 = _cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet$1 = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

var _classof$1 = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet$1(O = Object(it), TAG$3)) == 'string' ? T
    // builtinTag case
    : ARG$1 ? _cof(O)
    // ES3 arguments fallback
    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

var _anInstance$1 = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

// call something on iterator step with safe closing on error

var _iterCall$1 = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(_anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) _anObject(ret.call(iterator));
    throw e;
  }
};

// check on default Array iterator

var ITERATOR$6 = _wks$1('iterator');
var ArrayProto$2 = Array.prototype;

var _isArrayIter$1 = function (it) {
  return it !== undefined && (_iterators$1.Array === it || ArrayProto$2[ITERATOR$6] === it);
};

var ITERATOR$7 = _wks$1('iterator');

var core_getIteratorMethod$1 = _core.getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR$7]
    || it['@@iterator']
    || _iterators$1[_classof$1(it)];
};

var _forOf$1 = createCommonjsModule(function (module) {
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : core_getIteratorMethod$1(iterable);
  var f = _ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (_isArrayIter$1(iterFn)) for (length = _toLength(iterable.length); length > index; index++) {
    result = entries ? f(_anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = _iterCall$1(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;
});

// 7.3.20 SpeciesConstructor(O, defaultConstructor)


var SPECIES$3 = _wks$1('species');
var _speciesConstructor$1 = function (O, D) {
  var C = _anObject(O).constructor;
  var S;
  return C === undefined || (S = _anObject(C)[SPECIES$3]) == undefined ? D : _aFunction(S);
};

// fast apply, http://jsperf.lnkit.com/fast-apply/5
var _invoke$1 = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};

var process$3 = _global.process;
var setTask$1 = _global.setImmediate;
var clearTask$1 = _global.clearImmediate;
var MessageChannel$1 = _global.MessageChannel;
var Dispatch$1 = _global.Dispatch;
var counter$1 = 0;
var queue$1 = {};
var ONREADYSTATECHANGE$1 = 'onreadystatechange';
var defer$1, channel$1, port$1;
var run$1 = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue$1.hasOwnProperty(id)) {
    var fn = queue$1[id];
    delete queue$1[id];
    fn();
  }
};
var listener$1 = function (event) {
  run$1.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask$1 || !clearTask$1) {
  setTask$1 = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue$1[++counter$1] = function () {
      // eslint-disable-next-line no-new-func
      _invoke$1(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer$1(counter$1);
    return counter$1;
  };
  clearTask$1 = function clearImmediate(id) {
    delete queue$1[id];
  };
  // Node.js 0.8-
  if (_cof(process$3) == 'process') {
    defer$1 = function (id) {
      process$3.nextTick(_ctx(run$1, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch$1 && Dispatch$1.now) {
    defer$1 = function (id) {
      Dispatch$1.now(_ctx(run$1, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel$1) {
    channel$1 = new MessageChannel$1();
    port$1 = channel$1.port2;
    channel$1.port1.onmessage = listener$1;
    defer$1 = _ctx(port$1.postMessage, port$1, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (_global.addEventListener && typeof postMessage == 'function' && !_global.importScripts) {
    defer$1 = function (id) {
      _global.postMessage(id + '', '*');
    };
    _global.addEventListener('message', listener$1, false);
  // IE8-
  } else if (ONREADYSTATECHANGE$1 in _domCreate('script')) {
    defer$1 = function (id) {
      _html.appendChild(_domCreate('script'))[ONREADYSTATECHANGE$1] = function () {
        _html.removeChild(this);
        run$1.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer$1 = function (id) {
      setTimeout(_ctx(run$1, id, 1), 0);
    };
  }
}
var _task$1 = {
  set: setTask$1,
  clear: clearTask$1
};

var macrotask$1 = _task$1.set;
var Observer$1 = _global.MutationObserver || _global.WebKitMutationObserver;
var process$4 = _global.process;
var Promise$2 = _global.Promise;
var isNode$2 = _cof(process$4) == 'process';

var _microtask$1 = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode$2 && (parent = process$4.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode$2) {
    notify = function () {
      process$4.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer$1 && !(_global.navigator && _global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer$1(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise$2 && Promise$2.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise$2.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask$1.call(_global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};

// 25.4.1.5 NewPromiseCapability(C)


function PromiseCapability$1(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = _aFunction(resolve);
  this.reject = _aFunction(reject);
}

var f$8 = function (C) {
  return new PromiseCapability$1(C);
};

var _newPromiseCapability$1 = {
	f: f$8
};

var _perform$1 = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};

var navigator$1 = _global.navigator;

var _userAgent$1 = navigator$1 && navigator$1.userAgent || '';

var _promiseResolve$1 = function (C, x) {
  _anObject(C);
  if (_isObject(x) && x.constructor === C) return x;
  var promiseCapability = _newPromiseCapability$1.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

var _redefineAll$1 = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else _hide(target, key, src[key]);
  } return target;
};

var SPECIES$4 = _wks$1('species');

var _setSpecies$1 = function (KEY) {
  var C = typeof _core[KEY] == 'function' ? _core[KEY] : _global[KEY];
  if (_descriptors && C && !C[SPECIES$4]) _objectDp.f(C, SPECIES$4, {
    configurable: true,
    get: function () { return this; }
  });
};

var ITERATOR$8 = _wks$1('iterator');
var SAFE_CLOSING$1 = false;

try {
  var riter$1 = [7][ITERATOR$8]();
  riter$1['return'] = function () { SAFE_CLOSING$1 = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter$1, function () { throw 2; });
} catch (e) { /* empty */ }

var _iterDetect$1 = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING$1) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR$8]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR$8] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};

var task$1 = _task$1.set;
var microtask$1 = _microtask$1();




var PROMISE$1 = 'Promise';
var TypeError$2 = _global.TypeError;
var process$5 = _global.process;
var versions$1 = process$5 && process$5.versions;
var v8$1 = versions$1 && versions$1.v8 || '';
var $Promise$1 = _global[PROMISE$1];
var isNode$3 = _classof$1(process$5) == 'process';
var empty$1 = function () { /* empty */ };
var Internal$1, newGenericPromiseCapability$1, OwnPromiseCapability$1, Wrapper$1;
var newPromiseCapability$1 = newGenericPromiseCapability$1 = _newPromiseCapability$1.f;

var USE_NATIVE$1 = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise$1.resolve(1);
    var FakePromise = (promise.constructor = {})[_wks$1('species')] = function (exec) {
      exec(empty$1, empty$1);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode$3 || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty$1) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8$1.indexOf('6.6') !== 0
      && _userAgent$1.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable$1 = function (it) {
  var then;
  return _isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify$1 = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask$1(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled$1(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError$2('Promise-chain cycle'));
          } else if (then = isThenable$1(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled$1(promise);
  });
};
var onUnhandled$1 = function (promise) {
  task$1.call(_global, function () {
    var value = promise._v;
    var unhandled = isUnhandled$1(promise);
    var result, handler, console;
    if (unhandled) {
      result = _perform$1(function () {
        if (isNode$3) {
          process$5.emit('unhandledRejection', value, promise);
        } else if (handler = _global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = _global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode$3 || isUnhandled$1(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled$1 = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled$1 = function (promise) {
  task$1.call(_global, function () {
    var handler;
    if (isNode$3) {
      process$5.emit('rejectionHandled', promise);
    } else if (handler = _global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject$1 = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify$1(promise, true);
};
var $resolve$1 = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError$2("Promise can't be resolved itself");
    if (then = isThenable$1(value)) {
      microtask$1(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, _ctx($resolve$1, wrapper, 1), _ctx($reject$1, wrapper, 1));
        } catch (e) {
          $reject$1.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify$1(promise, false);
    }
  } catch (e) {
    $reject$1.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE$1) {
  // 25.4.3.1 Promise(executor)
  $Promise$1 = function Promise(executor) {
    _anInstance$1(this, $Promise$1, PROMISE$1, '_h');
    _aFunction(executor);
    Internal$1.call(this);
    try {
      executor(_ctx($resolve$1, this, 1), _ctx($reject$1, this, 1));
    } catch (err) {
      $reject$1.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal$1 = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal$1.prototype = _redefineAll$1($Promise$1.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability$1(_speciesConstructor$1(this, $Promise$1));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode$3 ? process$5.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify$1(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability$1 = function () {
    var promise = new Internal$1();
    this.promise = promise;
    this.resolve = _ctx($resolve$1, promise, 1);
    this.reject = _ctx($reject$1, promise, 1);
  };
  _newPromiseCapability$1.f = newPromiseCapability$1 = function (C) {
    return C === $Promise$1 || C === Wrapper$1
      ? new OwnPromiseCapability$1(C)
      : newGenericPromiseCapability$1(C);
  };
}

_export(_export.G + _export.W + _export.F * !USE_NATIVE$1, { Promise: $Promise$1 });
_setToStringTag$1($Promise$1, PROMISE$1);
_setSpecies$1(PROMISE$1);
Wrapper$1 = _core[PROMISE$1];

// statics
_export(_export.S + _export.F * !USE_NATIVE$1, PROMISE$1, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability$1(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
_export(_export.S + _export.F * (_library), PROMISE$1, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return _promiseResolve$1(this === Wrapper$1 ? $Promise$1 : this, x);
  }
});
_export(_export.S + _export.F * !(USE_NATIVE$1 && _iterDetect$1(function (iter) {
  $Promise$1.all(iter)['catch'](empty$1);
})), PROMISE$1, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability$1(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = _perform$1(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      _forOf$1(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability$1(C);
    var reject = capability.reject;
    var result = _perform$1(function () {
      _forOf$1(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});

_export(_export.P + _export.R, 'Promise', { 'finally': function (onFinally) {
  var C = _speciesConstructor$1(this, _core.Promise || _global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return _promiseResolve$1(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return _promiseResolve$1(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });

// https://github.com/tc39/proposal-promise-try




_export(_export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = _newPromiseCapability$1.f(this);
  var result = _perform$1(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });

var promise = _core.Promise;

var promise$1 = promise;

function prevent(e) {
  e.preventDefault();
  e.stopPropagation();
}

var Spinner = function Spinner(_ref) {
  var _ref$show = _ref.show,
      show = _ref$show === void 0 ? true : _ref$show,
      isPrimary = _ref.isPrimary,
      className = _ref.className;
  return React.createElement("span", {
    className: jsAwesomeUtils_1('Spinner', className && jsAwesomeUtils_7('Spinner--', className), show && 'Spinner--show', isPrimary && 'Spinner--primary')
  });
};

/*
* Async Button to show spinner if onClick returns promise
* @props *  - {Promise} onClick: optional, however if passed circular loader would be shown
  - Other props are passed as it is to Button component
* */

var AsyncButton =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(AsyncButton, _React$PureComponent);

  function AsyncButton() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
    _this.state = {
      isPending: false
    };

    _this.onClick = function (e) {
      if (!_this.props.onClick) {
        return;
      }

      e.persist(); // e.prevenDefault makes synthetic even to get removed. Synthetic event is needed for performance reasons

      prevent(e);

      if (!_this.state.isPending) {
        var returnValue = _this.props.onClick(e);

        if (returnValue instanceof promise$1) {
          _this.setState({
            isPending: true
          });

          returnValue.then(function (_) {
            return _this.setState({
              isPending: false
            });
          });
          returnValue.catch(function (_) {
            return _this.setState({
              isPending: false
            });
          });
        }
      }
    };

    return _this;
  }

  var _proto = AsyncButton.prototype;

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.isPending !== prevProps.isPending) {
      this.setState({
        isPending: this.props.isPending
      }); // In case of onSubmit, <Form> would control state of <AsyncButton>
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        pendingText = _this$props.pendingText,
        onClick = _this$props.onClick,
        _this$props$showSpinn = _this$props.showSpinner,
        showSpinner = _this$props$showSpinn === void 0 ? true : _this$props$showSpinn,
        children = _this$props.children,
        className = _this$props.className,
        disabled = _this$props.disabled,
        pending = _this$props.isPending,
        restProps = objectWithoutPropertiesLoose(_this$props, ["pendingText", "onClick", "showSpinner", "children", "className", "disabled", "isPending"]);

    var isPending = this.state.isPending;
    return React.createElement(Button, _extends_1({}, restProps, {
      className: jsAwesomeUtils_1('AsyncBtn', className, isPending && 'AsyncBtn--isPending'),
      onClick: onClick && !disabled ? this.onClick : void 0,
      disabled: isPending || disabled
    }), React.createElement("span", {
      className: "Btn-mainText"
    }, children), pendingText && React.createElement("span", {
      className: "Btn-pendingText"
    }, pendingText), showSpinner && React.createElement(Spinner, {
      show: isPending,
      isPrimary: !restProps.isPrimary || restProps.isLink
    }));
  };

  return AsyncButton;
}(React.PureComponent);

var RipplePointer = function RipplePointer(_ref) {
  var _ref$isPrimary = _ref.isPrimary,
      isPrimary = _ref$isPrimary === void 0 ? false : _ref$isPrimary,
      className = _ref.className,
      onClick = _ref.onClick,
      restProps = objectWithoutPropertiesLoose(_ref, ["isPrimary", "className", "onClick"]);

  return React.createElement("div", _extends_1({}, restProps, {
    className: jsAwesomeUtils_1('RipplePointer', isPrimary && 'RipplePointer--primary', jsAwesomeUtils_7('RipplePointer--', className), onClick && 'RipplePointer--clickable')
  }), React.createElement("span", {
    className: "RipplePointer-epicenter",
    onClick: onClick
  }));
};

var HelpText = function HelpText(_ref) {
  var children = _ref.children,
      _ref$isLarge = _ref.isLarge,
      isLarge = _ref$isLarge === void 0 ? false : _ref$isLarge;
  return React.createElement("div", {
    className: jsAwesomeUtils_1('HelpText', isLarge && 'HelpText--large')
  }, React.createElement("span", {
    className: "HelpText-content"
  }, children));
};

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

var assertThisInitialized = _assertThisInitialized;

/*
 *
 * */

var Tooltip =
/*#__PURE__*/
function (_React$Component) {
  inheritsLoose(Tooltip, _React$Component);

  // default delay = 0ms
  function Tooltip(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.state = {};
    _this.delay = _this.props.delay || 0;
    _this.onMouseEnter = _this._onMouseEnter.bind(assertThisInitialized(_this));
    _this.onMouseLeave = _this._onMouseLeave.bind(assertThisInitialized(_this));
    return _this;
  }

  var _proto = Tooltip.prototype;

  _proto._onMouseEnter = function _onMouseEnter(e) {
    this.setPosition();
  } // Location aware positioning
  ;

  _proto.setPosition = function setPosition() {};

  _proto._onMouseLeave = function _onMouseLeave(e) {
    this.props.onMouseLeave && this.props.onMouseLeave();
  };

  _proto.render = function render() {
    var _this$props = this.props,
        className = _this$props.className,
        children = _this$props.children,
        tooltipText = _this$props.tooltipText;
    return React.createElement("div", {
      className: jsAwesomeUtils_1('Tooltip', jsAwesomeUtils_7('Tooltip--', className))
    }, React.createElement("span", {
      className: "Tooltip-trigger",
      onMouseEnter: this.onMouseEnter,
      onMouseLeave: this.onMouseLeave
    }, children), React.createElement("span", {
      className: "Tooltip-text"
    }, tooltipText));
  };

  return Tooltip;
}(React.Component);

var OutsideClickLayer =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(OutsideClickLayer, _React$PureComponent);

  function OutsideClickLayer() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;

    _this.handleClick = function (e) {
      if (_this.layer && !_this.layer.contains(e.target)) {
        _this.props.onOutsideClick();
      }
    };

    _this.addListener = function () {
      document.addEventListener('mouseup', _this.handleClick);
    };

    _this.removeListener = function () {
      document.removeEventListener('mouseup', _this.handleClick);
    };

    _this.setRef = function (e) {
      return _this.layer = e;
    };

    return _this;
  }

  var _proto = OutsideClickLayer.prototype;

  _proto.componentDidMount = function componentDidMount() {
    if (this.props.enabled) {
      this.addListener();
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.removeListener();
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (prevProps.enabled !== this.props.enabled) {
      this.props.enabled ? this.addListener() : this.removeListener();
    }
  };

  _proto.render = function render() {
    var children = this.props.children;
    return React.createElement("div", {
      ref: this.setRef
    }, children);
  };

  return OutsideClickLayer;
}(React.PureComponent);

/*
 *
 * */

var Popover =
/*#__PURE__*/
function (_React$Component) {
  inheritsLoose(Popover, _React$Component);

  function Popover() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {};
    _this.delay = 250;
    _this.showPopover = _this._showPopover.bind(assertThisInitialized(_this));
    _this.hidePopover = _this._hidePopover.bind(assertThisInitialized(_this));
    _this.clearInterval = _this._clearInterval.bind(assertThisInitialized(_this));
    return _this;
  }

  var _proto = Popover.prototype;

  // Delay = 250ms (not taken from props to make consistent)
  _proto._showPopover = function _showPopover(e) {
    var _this2 = this;

    // No delay if the trigger is click
    if (!this.props.triggerOnHover) {
      this.setState({
        show: true
      });
    } else {
      this.inTransition = window.setTimeout(function (_) {
        _this2.inTransition && _this2.setState({
          show: true
        });
      }, this.delay);
    }
  };

  _proto._hidePopover = function _hidePopover(e) {
    this.setState({
      show: false
    });
  };

  _proto._clearInterval = function _clearInterval() {
    this.inTransition && window.clearTimeout(this.inTransition);
  };

  _proto.render = function render() {
    var _this$props = this.props,
        className = _this$props.className,
        children = _this$props.children,
        content = _this$props.content,
        _this$props$triggerOn = _this$props.triggerOnHover,
        triggerOnHover = _this$props$triggerOn === void 0 ? false : _this$props$triggerOn;
    return React.createElement(OutsideClickLayer, {
      onOutsideClick: this.hidePopover,
      enabled: true
    }, React.createElement("div", {
      className: jsAwesomeUtils_1('Popover', this.state.show && 'Popover--show', jsAwesomeUtils_7('Popover--', className))
    }, this.state.show && React.createElement("span", {
      className: "Popover-content"
    }, content(this.hidePopover)), React.createElement("span", {
      className: "Popover-trigger",
      onClick: triggerOnHover ? undefined : this.showPopover,
      onMouseOver: triggerOnHover ? this.showPopover : undefined,
      onMouseOut: triggerOnHover ? this.clearInterval : undefined
    }, children)));
  };

  return Popover;
}(React.Component);

function getFieldClasses(props) {
  var className = props.className;
  return jsAwesomeUtils_1('Field', jsAwesomeUtils_7('Field--', jsAwesomeUtils_1(className, getFieldWrapperClasses(props))));
}
/*
 * TODO: defaultValue, validator, tooltips onHover/onClick,
 *
 * */

var Field =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(Field, _React$PureComponent);

  function Field() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto = Field.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        tag = _this$props.tag,
        className = _this$props.className,
        name = _this$props.name,
        placeholder = _this$props.placeholder,
        disabled = _this$props.disabled,
        required = _this$props.required,
        children = _this$props.children,
        onChange = _this$props.onChange,
        onFocus = _this$props.onFocus,
        onBlur = _this$props.onBlur,
        elRef = _this$props.elRef,
        restProps = objectWithoutPropertiesLoose(_this$props, ["tag", "className", "name", "placeholder", "disabled", "required", "children", "onChange", "onFocus", "onBlur", "elRef"]);

    var InputTag = tag || 'input'; // tag = select, textarea, input

    return React.createElement("div", {
      className: getFieldClasses(this.props)
    }, React.createElement(InputTag, _extends_1({}, restProps, {
      // style, other Listeners
      className: "Field-el",
      name: name,
      placeholder: placeholder,
      disabled: disabled,
      required: required,
      onChange: onChange,
      onFocus: onFocus,
      onBlur: onBlur,
      ref: elRef
    })), children);
  };

  return Field;
}(React.PureComponent);
function getFieldWrapperClasses(props, state) {
  if (state === void 0) {
    state = {};
  }

  var disabled = props.disabled,
      required = props.required;
  var _state = state,
      isFocused = _state.isFocused,
      isMature = _state.isMature,
      error = _state.error;
  return jsAwesomeUtils_1(disabled && 'disabled', required && 'required', isFocused && 'focused', isMature && 'mature', error && 'invalid');
}
/*
 *
 * */

function addWrapperToField(_FieldComponent, _fieldType) {
  return (
    /*#__PURE__*/
    function (_React$PureComponent2) {
      inheritsLoose(_class, _React$PureComponent2);

      function _class(props) {
        var _this;

        _this = _React$PureComponent2.call(this, props) || this;
        _this.class = 'FieldWrapper';
        _this.state = {
          error: '',
          isMature: false,
          isFocused: false
        };
        _this.onChange = _this._onChange.bind(assertThisInitialized(_this));
        _this.onFocus = _this._onFocus.bind(assertThisInitialized(_this));
        _this.onBlur = _this._onBlur.bind(assertThisInitialized(_this));
        return _this;
      }

      var _proto2 = _class.prototype;

      _proto2.componentDidMount = function componentDidMount() {
        this.evalValidity(); // error is evaluated in start, even though it may be displayed only when isMature.
        // On render, FE error will be shown upfront if value filled is not value.

        if (this.props.defaultValue || this.props.value) {
          this.setState({
            isMature: true
          });
        }
      } // TODO: Debounce
      ;

      _proto2.evalValidity = function evalValidity() {
        // TODO: evaluation logic
        var error = '';
        this.setState({
          error: error
        });
      };

      _proto2._onFocus = function _onFocus() {
        this.setState({
          isFocused: true
        });
        this.props.onFocus && this.props.onFocus(e);
      };

      _proto2._onBlur = function _onBlur() {
        this.setState({
          isFocused: false
        });
        /*
         * Setting mature shows the error. However, mature is done only when the field is isDirty and also, blurred.
         * So, error on mature is shown only when it has isDirty + blurred once.
         * */

        if (this.state.isDirty) {
          this.setState({
            isMature: true
          });
        }

        this.props.onBlur && this.props.onBlur(e);
      };

      _proto2._onChange = function _onChange(e) {
        this.evalValidity();
        this.props.onChange && this.props.onChange(e);

        if (!this.state.isMature || !this.state.isDirty) {
          this.setState({
            isDirty: true
          });
        }
      };

      _proto2.render = function render() {
        var _this$props2 = this.props,
            className = _this$props2.className,
            label = _this$props2.label,
            description = _this$props2.description,
            children = _this$props2.children,
            restProps = objectWithoutPropertiesLoose(_this$props2, ["className", "label", "description", "children"]);

        var error = this.state.error;
        return React.createElement("div", {
          className: jsAwesomeUtils_1(this.class, className && jsAwesomeUtils_7(this.class + "--", className), _fieldType && jsAwesomeUtils_7(this.class + "--", _fieldType), jsAwesomeUtils_7(this.class + "--", getFieldWrapperClasses(this.props, this.state)))
        }, label && React.createElement("div", {
          className: "Field-label"
        }, label, restProps.required && React.createElement("span", {
          className: "Field-label-star"
        }, "*")), React.createElement("div", {
          className: "Field-content"
        }, React.createElement(_FieldComponent, _extends_1({}, restProps, {
          onError: this.onError,
          onChange: this.onChange,
          onFocus: this.onFocus,
          onBlur: this.onBlur
        }), children), React.createElement("div", {
          className: "Field-error"
        }, error || ''), React.createElement("div", {
          className: "Field-description"
        }, description || '')));
      };

      return _class;
    }(React.PureComponent)
  );
}

/*
 *
 *
 * */

var TextareaElement =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(TextareaElement, _React$PureComponent);

  function TextareaElement() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
    _this.onInput = _this._onInput.bind(assertThisInitialized(_this));
    _this.disableEnterPress = _this._disableEnterPress.bind(assertThisInitialized(_this));

    _this.setRef = function (e) {
      return _this.resizerEl = e;
    };

    _this.setElRef = function (e) {
      _this.el = _this.props.setElRef ? _this.props.setElRef(e) : e;
    };

    return _this;
  }

  var _proto = TextareaElement.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.props.autoResize && this.autoAdjustHeight(this.el);
  };

  _proto.autoAdjustHeight = function autoAdjustHeight(target) {
    if (!target) {
      return;
    }

    var content = target.value;
    var resizerEl = this.resizerEl;
    resizerEl.value = content;
    var newHeight = resizerEl.scrollHeight;
    target.style.height = newHeight + 'px';
  };

  _proto._onInput = function _onInput(e) {
    if (this.props.autoResize) {
      this.autoAdjustHeight(e.target);
    }

    this.props.onInput && this.props.onInput(e);
  };

  _proto._disableEnterPress = function _disableEnterPress(e) {
    if (e.which === 13) {
      // Enter
      e.preventDefault();
      return;
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        autoResize = _this$props.autoResize,
        disableEnterPress = _this$props.disableEnterPress,
        className = _this$props.className,
        setElRef = _this$props.setElRef,
        restProps = objectWithoutPropertiesLoose(_this$props, ["autoResize", "disableEnterPress", "className", "setElRef"]);

    return React.createElement(Field, _extends_1({}, restProps, {
      className: jsAwesomeUtils_1('Textarea', className),
      tag: "textarea",
      onInput: this.onInput,
      onKeyPress: disableEnterPress ? this.disableEnterPress : undefined,
      elRef: this.setElRef
    }), autoResize && React.createElement("textarea", {
      className: "Textarea-resizer",
      ref: this.setRef,
      readOnly: true
    }));
  };

  return TextareaElement;
}(React.PureComponent);
TextareaElement.defaultProps = {
  autoResize: false,
  disableEnterPress: false
};
/*
 *
 *
 * */

var Textarea = addWrapperToField(TextareaElement, 'Textarea');

function Clipboard(type) {
  var _temp;

  var _WrappedComponent;

  var HOC = (_temp =
  /*#__PURE__*/
  function (_React$PureComponent) {
    inheritsLoose(HOC, _React$PureComponent);

    function HOC(props) {
      var _this;

      _this = _React$PureComponent.call(this, props) || this;

      _this.setRef = function (e) {
        return _this.copierEl = e;
      };

      _this.state = {
        isCopied: null,
        isCopySupported: false
      };
      _this.copyToClipboard = _this._copyToClipboard.bind(assertThisInitialized(_this));

      if (type === 'withTooltip') {
        _this.onMouseLeave = _this._onMouseLeave.bind(assertThisInitialized(_this));
      }

      return _this;
    }

    var _proto = HOC.prototype;

    _proto.componentDidMount = function componentDidMount() {
      if (document.execCommand) {
        this.setState({
          isCopySupported: true
        });
      }
    };

    _proto.selectValue = function selectValue() {
      if (this.copierEl.select) {
        this.copierEl.select();
        this.setState({
          isCopied: true
        });
      }
    };

    _proto._copyToClipboard = function _copyToClipboard() {
      var _this2 = this;

      this.selectValue();
      document.execCommand('copy');
      setTimeout(function (_) {
        _this2.setState({
          isCopied: false
        });
      }, 1500);
      this.props.onCopy && this.props.onCopy();
    };

    _proto._onMouseLeave = function _onMouseLeave() {
      this.setState({
        isCopied: false
      });
    };

    _proto.render = function render() {
      var _this$props = this.props,
          className = _this$props.className,
          toCopy = _this$props.toCopy,
          restProps = objectWithoutPropertiesLoose(_this$props, ["className", "toCopy"]);

      var _this$state = this.state,
          isCopied = _this$state.isCopied,
          isCopySupported = _this$state.isCopySupported;

      if (!isCopySupported) {
        return null;
      }

      return React.createElement("span", {
        className: jsAwesomeUtils_1('Clipboard', "Clipboard--" + type, jsAwesomeUtils_7('Clipboard--', className), isCopied && 'Clipboard--copied'),
        onClick: this.copyToClipboard
      }, React.createElement(TextareaElement, {
        setElRef: this.setRef,
        className: "Clipboard-input",
        value: toCopy,
        readOnly: true
      }), React.createElement(_WrappedComponent, _extends_1({}, restProps, {
        isCopied: isCopied,
        onMouseLeave: this.onMouseLeave
      })));
    };

    return HOC;
  }(React.PureComponent), _temp);
  return function (_component) {
    _WrappedComponent = _component;
    return HOC;
  };
}
/*
 *
 *
 * */


function _ClipboardWithButton(_ref) {
  var isCopied = _ref.isCopied,
      buttonCopyText = _ref.buttonCopyText,
      _ref$buttonCopiedText = _ref.buttonCopiedText,
      buttonCopiedText = _ref$buttonCopiedText === void 0 ? 'Copied!' : _ref$buttonCopiedText;
  return React.createElement(Button, {
    className: "Clipboard-copyButton"
  }, isCopied ? buttonCopiedText : buttonCopyText);
}

var ClipboardWithButton = Clipboard('withButton')(_ClipboardWithButton);
/*
 *
 *
 * */

function _ClipboardWithTooltip(_ref2) {
  var children = _ref2.children,
      isCopied = _ref2.isCopied,
      tooltipCopyText = _ref2.tooltipCopyText,
      _ref2$tooltipCopiedTe = _ref2.tooltipCopiedText,
      tooltipCopiedText = _ref2$tooltipCopiedTe === void 0 ? 'Copied!' : _ref2$tooltipCopiedTe,
      onMouseLeave = _ref2.onMouseLeave;
  return React.createElement(Tooltip, {
    tooltipText: isCopied ? tooltipCopiedText : tooltipCopyText,
    onMouseLeave: onMouseLeave
  }, children);
}

var ClipboardWithTooltip = Clipboard('withTooltip')(_ClipboardWithTooltip);

function TagsList(_ref) {
  var className = _ref.className,
      children = _ref.children;
  return React.createElement("div", {
    className: jsAwesomeUtils_1('TagsList', jsAwesomeUtils_7('TagsList--', className))
  }, children);
}

function Tag(_ref) {
  var children = _ref.children,
      className = _ref.className;
  return React.createElement("div", {
    className: jsAwesomeUtils_1('Tag', jsAwesomeUtils_7('Tag--', className))
  }, children);
}

var AutoRemoveLayer =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(AutoRemoveLayer, _React$PureComponent);

  function AutoRemoveLayer() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
    _this.state = {};
    _this.handleRemove = _this._handleRemove.bind(assertThisInitialized(_this));
    return _this;
  }

  var _proto = AutoRemoveLayer.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.startAutoRemove();
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.removeTimer && clearTimeout(this.removeTimer);
  };

  _proto.startAutoRemove = function startAutoRemove() {
    var _this2 = this;

    if (this.props.enabled) {
      var autoRemoveDuration = this.props.duration || 3000; // 3s is default duration to hide a given item in stack

      this.removeTimer = setTimeout(function (_) {
        _this2.setState({
          hide: true
        });

        setTimeout(_this2.handleRemove, 500);
      }, autoRemoveDuration);
    }
  };

  _proto._handleRemove = function _handleRemove() {
    this.props.remove(this.props.id);
  };

  _proto.render = function render() {
    return React.createElement("div", {
      className: jsAwesomeUtils_1(this.state.hide && "isHidden")
    }, this.props.children);
  };

  return AutoRemoveLayer;
}(React.PureComponent);

/*
 *
 * */

var Stack =
/*#__PURE__*/
function (_React$Component) {
  inheritsLoose(Stack, _React$Component);

  function Stack() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      stack: []
    };
    _this.stackType = 'Stack';

    _this.removeItemFromStack = function (id) {
      var stack = _this.state.stack;
      var indexToRemove;

      for (var i = 0; i < stack.length; i++) {
        if (stack[i].id === id) {
          indexToRemove = i;
          break;
        }
      }

      stack.splice(indexToRemove, 1); // Directly mutating the state
      // Just to trigger re-render

      _this.setState({
        stack: stack
      });
    };

    return _this;
  }

  var _proto = Stack.prototype;

  _proto.addItemInStack = function addItemInStack(opts, reverseOrder) {
    var stack = this.state.stack;
    var stackOrder = reverseOrder ? 'push' : 'unshift'; // By default stack will add in the starting
    // Directly mutating the state

    stack[stackOrder](assign$1({
      // Adding in starting of the stack
      id: this.stackType + "-" + new Date().getTime()
    }, opts)); // Just to trigger re-render

    this.setState({
      stack: stack
    });
  };

  return Stack;
}(React.Component);
var StackItem =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(StackItem, _React$PureComponent);

  function StackItem() {
    var _this2;

    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    _this2 = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
    _this2.handleRemove = _this2._handleRemove.bind(assertThisInitialized(_this2));
    return _this2;
  }

  var _proto2 = StackItem.prototype;

  _proto2._handleRemove = function _handleRemove() {
    this.props.removeItemFromStack(this.props.id);
  };

  _proto2.render = function render() {
    var _this$props = this.props,
        className = _this$props.className,
        _this$props$stackItem = _this$props.stackItemType,
        stackItemType = _this$props$stackItem === void 0 ? 'StackItem' : _this$props$stackItem,
        showCross = _this$props.showCross,
        children = _this$props.children;
    return React.createElement("div", {
      className: jsAwesomeUtils_1(stackItemType, jsAwesomeUtils_7(stackItemType + "--", className))
    }, React.createElement("span", {
      className: stackItemType + "-content"
    }, typeof children === 'function' ? children(this.handleRemove) : children), !!showCross && React.createElement("span", {
      className: stackItemType + "-cross",
      onClick: this.handleRemove
    }, "\xD7"));
  };

  return StackItem;
}(React.PureComponent);

var _toastsStackInstance;
/*
 *
 * By default auto hide is on for Toast
 * */


var ToastsContainer =
/*#__PURE__*/
function (_Stack) {
  inheritsLoose(ToastsContainer, _Stack);

  function ToastsContainer() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Stack.call.apply(_Stack, [this].concat(args)) || this;
    _this.stackType = 'Toast';
    return _this;
  }

  var _proto = ToastsContainer.prototype;

  // Override stackType
  _proto.componentDidMount = function componentDidMount() {
    _toastsStackInstance = this;
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    _toastsStackInstance = null;
  };

  _proto.render = function render() {
    var _this2 = this;

    return React.createElement("div", {
      className: "ToastsContainer"
    }, this.state.stack.map(function (t, ix) {
      // By default auto remove is ON for Toast
      var isEnabledAutoRemove = typeof t.enableAutoRemove !== 'undefined' ? !!t.enableAutoRemove : true;
      return React.createElement(AutoRemoveLayer, {
        key: t.id,
        duration: t.duration,
        remove: _this2.removeItemFromStack,
        enabled: isEnabledAutoRemove
      }, React.createElement(StackItem, {
        stackItemType: _this2.stackType,
        id: t.id,
        className: t.type,
        showCross: t.showCross,
        removeItemFromStack: _this2.removeItemFromStack
      }, t.content));
    }));
  };

  return ToastsContainer;
}(Stack);
function openToast(_ref) {
  var content = _ref.content,
      type = _ref.type,
      duration = _ref.duration,
      showCross = _ref.showCross;

  _toastsStackInstance.addItemInStack({
    content: content,
    type: type,
    duration: duration,
    showCross: showCross
  });
}

var _notificationsStackInstance;
/*
 *
 * */


var NotificationsContainer =
/*#__PURE__*/
function (_Stack) {
  inheritsLoose(NotificationsContainer, _Stack);

  function NotificationsContainer() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Stack.call.apply(_Stack, [this].concat(args)) || this;
    _this.stackType = 'Notification';
    return _this;
  }

  var _proto = NotificationsContainer.prototype;

  // Override stackType
  _proto.componentDidMount = function componentDidMount() {
    _notificationsStackInstance = this;
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    _notificationsStackInstance = null;
  };

  _proto.render = function render() {
    var _this2 = this;

    return React.createElement("div", {
      className: "NotificationsContainer"
    }, this.state.stack.map(function (n, ix) {
      // By default auto remove is ON for Notification
      var isEnabledAutoRemove = typeof n.enableAutoRemove !== 'undefined' ? !!n.enableAutoRemove : true;
      return React.createElement(AutoRemoveLayer, {
        key: n.id,
        duration: n.duration,
        remove: _this2.removeItemFromStack,
        enabled: isEnabledAutoRemove
      }, React.createElement(StackItem, {
        stackItemType: _this2.stackType,
        id: n.id,
        showCross: n.showCross,
        removeItemFromStack: _this2.removeItemFromStack,
        className: n.className
      }, n.content));
    }));
  };

  return NotificationsContainer;
}(Stack);
function openNotification(props) {
  _notificationsStackInstance.addItemInStack(props);
}

var EscPressLayer =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(EscPressLayer, _React$PureComponent);

  function EscPressLayer() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
    _this.handleEsc = _this._handleEsc.bind(assertThisInitialized(_this));

    _this.addListener = function () {
      document.addEventListener('keydown', _this.handleEsc);
    };

    _this.removeListener = function () {
      document.removeEventListener('keydown', _this.handleEsc);
    };

    return _this;
  }

  var _proto = EscPressLayer.prototype;

  _proto._handleEsc = function _handleEsc(e) {
    e = e || window.event;
    var isEscape = false;

    if ('key' in e) {
      isEscape = e.key === 'Escape' || e.key === 'Esc';
    } else {
      isEscape = e.keyCode === 27;
    }

    if (isEscape) {
      this.props.onEscPress();
    }
  };

  _proto.componentDidMount = function componentDidMount() {
    if (this.props.enabled) {
      this.addListener();
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.removeListener();
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (prevProps.enabled !== this.props.enabled) {
      this.props.enabled ? this.addListener() : this.removeListener();
    }
  };

  _proto.render = function render() {
    var children = this.props.children;
    return React.createElement("div", null, children);
  };

  return EscPressLayer;
}(React.PureComponent);

/*
 * Usage: <BackDrop>{content}</BackDrop>
 * Props:
 *   show
 *   className
 * */

var BackDrop =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(BackDrop, _React$PureComponent);

  function BackDrop() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto = BackDrop.prototype;

  _proto.componentDidMount = function componentDidMount() {
    if (this.props.show) {
      this.freezeBG();
    }
  };

  _proto.componentDidUpdate = function componentDidUpdate() {
    if (this.props.show) {
      this.freezeBG();
    } else {
      this.unFreezeBG();
    }
  };

  _proto.freezeBG = function freezeBG() {
    document.body.classList.add('freeze');
    document.getElementById('root').classList.add('freeze');
  };

  _proto.unFreezeBG = function unFreezeBG() {
    document.body.classList.remove('freeze');
    document.getElementById('root').classList.remove('freeze');
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.unFreezeBG();
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        _this$props$show = _this$props.show,
        show = _this$props$show === void 0 ? false : _this$props$show,
        className = _this$props.className;
    return React.createElement("div", {
      className: jsAwesomeUtils_1('BackDrop', show && 'BackDrop--show', jsAwesomeUtils_7('BackDrop--', className))
    }, React.createElement("div", {
      className: "BackDrop-content"
    }, children));
  };

  return BackDrop;
}(React.PureComponent);

var _popupsStackInstance;
/*
 *
 * No auto removal for Popups
 * */

var PopupsContainer =
/*#__PURE__*/
function (_Stack) {
  inheritsLoose(PopupsContainer, _Stack);

  function PopupsContainer() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Stack.call.apply(_Stack, [this].concat(args)) || this;
    _this.stackType = 'Popup';
    return _this;
  }

  var _proto = PopupsContainer.prototype;

  // Override stackType
  _proto.componentDidMount = function componentDidMount() {
    _popupsStackInstance = this;
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    _popupsStackInstance = null;
  };

  _proto.render = function render() {
    var _this2 = this;

    return React.createElement(BackDrop, {
      className: "Popup",
      show: this.state.stack.length
    }, this.state.stack.map(function (p, ix) {
      var isEnabledOutsideClick = p.enableOutsideClick || false; // By default it's false

      var isEnabledEscPress = p.enableEscPress || false; // By default it's false

      return React.createElement(OutsideClickLayer, {
        key: p.id,
        onOutsideClick: function onOutsideClick(_) {
          return _this2.removeItemFromStack(p.id);
        },
        enabled: isEnabledOutsideClick && ix === _this2.state.stack.length - 1 // Only last Popup is allowed to be closed on outside click

      }, React.createElement(EscPressLayer, {
        onEscPress: function onEscPress(_) {
          return _this2.removeItemFromStack(p.id);
        },
        enabled: isEnabledEscPress && ix === _this2.state.stack.length - 1 // Only last Popup is allowed to be closed on ecs press

      }, React.createElement(StackItem, {
        stackItemType: _this2.stackType,
        id: p.id,
        showCross: p.showCross,
        removeItemFromStack: _this2.removeItemFromStack,
        className: p.className
      }, p.title && React.createElement("div", {
        className: jsAwesomeUtils_1(_this2.stackType + "--title")
      }, p.title), React.createElement("div", {
        className: jsAwesomeUtils_1(_this2.stackType + "--body")
      }, typeof p.content === 'function' ? p.content(function (_) {
        return _this2.removeItemFromStack(p.id);
      }) : p.content))));
    }));
  };

  return PopupsContainer;
}(Stack);
/*
 * Props:
 *   title
 *   content
 *   className
 *   showCross
 *   enableEscPress
 *   enableOutsideClick
 *
 * */

function openPopup(props) {
  _popupsStackInstance.addItemInStack(props, true);
}

/*
 * Props:
 *   description,
 *   cancelLabel,
 *   affirmLabel,
 *   onAffirm,
 *   onCancel
 * */

var ConfirmPopup =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(ConfirmPopup, _React$PureComponent);

  function ConfirmPopup() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
    _this.onCancel = _this._onCancel.bind(assertThisInitialized(_this));
    _this.onAffirm = _this._onAffirm.bind(assertThisInitialized(_this));
    return _this;
  }

  var _proto = ConfirmPopup.prototype;

  _proto._onCancel = function _onCancel() {
    this.props.close();
    this.props.onCancel && this.props.onCancel();
    this.props.reject();
  };

  _proto._onAffirm = function _onAffirm() {
    var _this2 = this;

    this.props.close();

    if (this.props.onAffirm) {
      var promise = this.props.onAffirm();

      if (promise.then) {
        promise.then(function (resp) {
          _this2.props.resolve(resp);
        });
      } else {
        this.props.resolve();
      }
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        description = _this$props.description,
        affirmLabel = _this$props.affirmLabel,
        cancelLabel = _this$props.cancelLabel,
        className = _this$props.className;
    return React.createElement(React.Fragment, null, description && React.createElement("div", {
      className: jsAwesomeUtils_7('Popup--', className + '-description')
    }, description), React.createElement("div", {
      className: jsAwesomeUtils_7('Popup--', className + '-actions')
    }, React.createElement(Button, {
      onClick: this.onCancel
    }, cancelLabel), React.createElement(Button, {
      isPrimary: true,
      onClick: this.onAffirm
    }, affirmLabel)));
  };

  return ConfirmPopup;
}(React.PureComponent);
/*
 * Props:
 *   title,
 *   description,
 *   affirmLabel,
 *   cancelLabel,
 *   onAffirm,
 *   onCancel
 *
 * */


function openConfirmPopup(_ref) {
  var description = _ref.description,
      affirmLabel = _ref.affirmLabel,
      cancelLabel = _ref.cancelLabel,
      onAffirm = _ref.onAffirm,
      onCancel = _ref.onCancel,
      className = _ref.className,
      restProps = objectWithoutPropertiesLoose(_ref, ["description", "affirmLabel", "cancelLabel", "onAffirm", "onCancel", "className"]);

  var cls = 'Confirm';
  return new promise$1(function (res, rej) {
    _popupsStackInstance.addItemInStack(assign$1({}, restProps, {
      className: jsAwesomeUtils_1(cls, className),
      content: function content(close) {
        return React.createElement(ConfirmPopup, {
          className: cls,
          close: close,
          description: description,
          affirmLabel: affirmLabel,
          cancelLabel: cancelLabel,
          onAffirm: onAffirm,
          onCancel: onCancel,
          resolve: res,
          reject: rej
        });
      },
      showCross: false,
      enableEscPress: false,
      enableOutsideClick: false
    }), true);
  }).catch(function (err) {});
}

var GhostLoader = function GhostLoader(_ref) {
  var className = _ref.className,
      _ref$animate = _ref.animate,
      animate = _ref$animate === void 0 ? false : _ref$animate;
  return React.createElement("div", {
    className: jsAwesomeUtils_1('GhostLoader', animate && 'GhostLoader--animate', jsAwesomeUtils_7('GhostLoader--', className))
  });
};

var Dropdown =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(Dropdown, _React$PureComponent);

  function Dropdown(props) {
    var _this;

    _this = _React$PureComponent.call(this, props) || this;

    _this.setBodyRef = function (e) {
      return _this.optionsBody = e;
    };

    _this.state = {
      show: props.show || false
    };
    _this.toggleDropdown = _this._toggleDropdown.bind(assertThisInitialized(_this));
    _this.closeDropdown = _this._closeDropdown.bind(assertThisInitialized(_this));
    return _this;
  }

  var _proto = Dropdown.prototype;

  _proto._toggleDropdown = function _toggleDropdown(forceSet) {
    var _this2 = this;

    var toShow = typeof forceSet === 'boolean' ? forceSet : !this.state.show;
    this.setState({
      show: toShow
    }, function () {
      if (toShow) {
        _this2.rePositionBody();
      }
    });
  };

  _proto.componentDidMount = function componentDidMount() {
    if (this.state.show) {
      this.rePositionBody();
    }
  };

  _proto.rePositionBody = function rePositionBody() {
    var el = this.optionsBody;
    var renderWidthWithFixed = el && el.getBoundingClientRect().width;
    el.style.width = renderWidthWithFixed + 'px';
    el.style.position = 'absolute';
    el.style.opacity = 1;
  };

  _proto._closeDropdown = function _closeDropdown() {
    this.toggleDropdown(false);
  };

  _proto.render = function render() {
    var _this3 = this;

    var _this$props = this.props,
        showOnHover = _this$props.showOnHover,
        className = _this$props.className,
        trigger = _this$props.trigger,
        beforeOptions = _this$props.beforeOptions,
        afterOptions = _this$props.afterOptions,
        children = _this$props.children;
    var show = this.state.show;
    return React.createElement(OutsideClickLayer, {
      onOutsideClick: function onOutsideClick(_) {
        return _this3.setState({
          show: false
        });
      },
      enabled: !showOnHover
    }, React.createElement("div", {
      className: jsAwesomeUtils_1('Dropdown', show && 'Dropdown--show', jsAwesomeUtils_7('Dropdown--', className)),
      onMouseEnter: showOnHover ? this.toggleDropdown : undefined,
      onMouseLeave: showOnHover ? this.closeDropdown : undefined
    }, React.createElement("div", {
      ref: this.setTriggerRef,
      className: "Dropdown-trigger",
      onClick: showOnHover ? undefined : this.toggleDropdown
    }, typeof trigger === 'function' ? trigger() : trigger), this.state.show && React.createElement(DropdownOptions, {
      elRef: this.setBodyRef,
      beforeOptions: beforeOptions,
      afterOptions: afterOptions,
      closeDropdown: this.closeDropdown
    }, children)));
  };

  return Dropdown;
}(React.PureComponent);
var DropdownOptions =
/*#__PURE__*/
function (_React$PureComponent2) {
  inheritsLoose(DropdownOptions, _React$PureComponent2);

  function DropdownOptions() {
    return _React$PureComponent2.apply(this, arguments) || this;
  }

  var _proto2 = DropdownOptions.prototype;

  _proto2.render = function render() {
    var _this$props2 = this.props,
        beforeOptions = _this$props2.beforeOptions,
        afterOptions = _this$props2.afterOptions,
        children = _this$props2.children,
        elRef = _this$props2.elRef,
        closeDropdown = _this$props2.closeDropdown;
    return React.createElement("div", {
      ref: elRef,
      className: "DropdownBody"
    }, !!beforeOptions && React.createElement("div", {
      className: "DropdownOptions-before"
    }, typeof beforeOptions === 'function' ? beforeOptions(closeDropdown) : beforeOptions), React.createElement("div", {
      className: "DropdownOptions"
    }, typeof children === 'function' ? children(closeDropdown) : children), !!afterOptions && React.createElement("div", {
      className: "DropdownOptions-after"
    }, typeof afterOptions === 'function' ? afterOptions(closeDropdown) : afterOptions));
  };

  return DropdownOptions;
}(React.PureComponent);
var DropdownItem = function DropdownItem(_ref) {
  var children = _ref.children,
      className = _ref.className,
      restProps = objectWithoutPropertiesLoose(_ref, ["children", "className"]);

  return React.createElement("div", _extends_1({
    className: jsAwesomeUtils_1('DropdownItem', className)
  }, restProps), children);
};

var Card =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(Card, _React$PureComponent);

  function Card() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto = Card.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        className = _this$props.className,
        animate = _this$props.animate,
        hasShadow = _this$props.hasShadow,
        children = _this$props.children;
    return React.createElement("div", {
      className: jsAwesomeUtils_1('Card', animate && 'Card--animate', hasShadow && 'Card--shadow', jsAwesomeUtils_7('Card--', className))
    }, children);
  };

  return Card;
}(React.PureComponent);

var Banner = function Banner(_ref) {
  var className = _ref.className,
      type = _ref.type,
      children = _ref.children;
  return React.createElement("div", {
    className: jsAwesomeUtils_1('Banner', type && "Banner--" + type, jsAwesomeUtils_7('Banner--', className))
  }, children);
};

var _createProperty = function (object, index, value) {
  if (index in object) _objectDp.f(object, index, _propertyDesc(0, value));
  else object[index] = value;
};

_export(_export.S + _export.F * !_iterDetect$1(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = _toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = core_getIteratorMethod$1(O);
    var length, result, step, iterator;
    if (mapping) mapfn = _ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && _isArrayIter$1(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        _createProperty(result, index, mapping ? _iterCall$1(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = _toLength(O.length);
      for (result = new C(length); length > index; index++) {
        _createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});

var from_1 = _core.Array.from;

var from_1$1 = from_1;

var Form =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(Form, _React$PureComponent);

  function Form() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
    _this.state = {
      isPending: false
    };

    _this.setRef = function (e) {
      return _this.form = e;
    };

    _this.evaluateIfError = jsAwesomeUtils_2(_this._evaluateIfError.bind(assertThisInitialized(_this)), 50);
    _this.onChange = _this._onChange.bind(assertThisInitialized(_this));
    _this.onSubmit = _this._onSubmit.bind(assertThisInitialized(_this));
    return _this;
  }

  var _proto = Form.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.evaluateIfError();
  };

  _proto._evaluateIfError = function _evaluateIfError() {
    var hasInvalidField = this.form.querySelector('.Input.isInvalid');
    this.setState({
      isInvalid: hasInvalidField
    });
    return hasInvalidField;
  };

  _proto._onSubmit = function _onSubmit(e) {
    var _this2 = this;

    e.preventDefault();

    if (!this.state.isPending && !this.state.isInvalid) {
      var returnValue = this.props.onSubmit(serialize(e.target));

      if (returnValue instanceof promise$1) {
        this.setState({
          isPending: true
        });
        returnValue.catch(function (e) {
          console.log(e);
        }).then(function () {
          _this2.setState({
            isPending: false
          });
        });
      }
    }
  };

  _proto._onChange = function _onChange(e) {
    var _this3 = this;

    this.props.onChange && this.props.onChange(e);
    setTimeout(function () {
      _this3.evaluateIfError();
    }, 10);
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        onChange = _this$props.onChange,
        onSubmit = _this$props.onSubmit,
        className = _this$props.className,
        restProps = objectWithoutPropertiesLoose(_this$props, ["children", "onChange", "onSubmit", "className"]);

    return React.createElement("form", _extends_1({
      ref: this.setRef,
      noValidate: true
    }, restProps, {
      className: jsAwesomeUtils_1('Form', this.state.isPending && 'Form--isPending', this.state.isInvalid && 'Form--isInvalid', jsAwesomeUtils_7('Form--', className)),
      onSubmit: this.onSubmit,
      onChange: this.onChange
    }), children(this.state.isPending, this.state.isInvalid));
  };

  return Form;
}(React.PureComponent);
function serialize(form) {
  return Array.prototype.reduce.call(form.querySelectorAll('[name]'), function (data, el) {
    var name = el.name,
        value = el.value;

    if (el.type === 'checkbox') {
      value = el.checked ? '1' : '0';
    }

    if (el.type === 'radio') {
      if (!el.checked) {
        return data;
      }

      value = el.value;
    }

    if (el.type === 'select-multiple') {
      value = [];

      var selectedOptions = from_1$1(el.selectedOptions);

      selectedOptions.forEach(function (option) {
        return value.push(option.value);
      });
    }

    if (el.type === 'file') {
      value = el.files.length ? el.files : null;
    }

    if (value) {
      // item[foo] â item.foo
      var nameSplit = name.match(/(.+)\[(\w+)\]$/);

      if (nameSplit) {
        var arrayIndex = nameSplit[2];
        var array = data[nameSplit[1]];

        if (arrayIndex === '0') {
          data[nameSplit[1]] = [value];
        } else if (/^\d+$/.test(arrayIndex)) {
          array.push(value);
        } else {
          if (!array) {
            data[nameSplit[1]] = {};
          }

          data[nameSplit[1]][arrayIndex] = value;
        }
      } else {
        data[name] = value;
      }
    }

    return data;
  }, {});
}

/*
 *
 * */

var InputElement = Field;
/*
 *
 * */

var Input = addWrapperToField(InputElement, 'Input');

/*
 *
 * TODO: Handle required, etc.
 * */

var RadioGroupElement =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(RadioGroupElement, _React$PureComponent);

  function RadioGroupElement(props) {
    var _this;

    _this = _React$PureComponent.call(this, props) || this;
    _this.state = {
      value: _this.props.defaultValue || ''
    };
    _this.onChange = _this._onChange.bind(assertThisInitialized(_this));
    return _this;
  }

  var _proto = RadioGroupElement.prototype;

  _proto._onChange = function _onChange(option) {
    var newValue = option.isChecked ? option.value : '';
    this.setState({
      value: newValue
    });
    this.props.onChange && this.props.onChange(newValue);
  };

  _proto.render = function render() {
    var _this2 = this;

    var _this$props = this.props,
        name = _this$props.name,
        className = _this$props.className,
        options = _this$props.options,
        disabled = _this$props.disabled;
    var value = this.state.value;
    return React.createElement("div", {
      className: getFieldClasses(assign$1({}, this.props, {
        className: jsAwesomeUtils_1('RadioGroup', className)
      }))
    }, React.createElement("input", {
      name: name,
      value: value,
      hidden: true,
      readOnly: true
    }), options.map(function (o, i) {
      return React.createElement(Radio, {
        key: o.value,
        value: o.value,
        isChecked: value === o.value,
        onChange: _this2.onChange,
        className: "Field-el",
        disabled: disabled
      }, typeof o.label === 'function' ? o.label() : o.label);
    }));
  };

  return RadioGroupElement;
}(React.PureComponent);
/*
 *
 *
 * */

var RadioGroup =
/*#__PURE__*/
function (_addWrapperToField) {
  inheritsLoose(RadioGroup, _addWrapperToField);

  function RadioGroup(props) {
    var _this3;

    _this3 = _addWrapperToField.call(this, props) || this;
    _this3.state = {
      error: ''
    };
    _this3.onFocus = undefined;
    _this3.onBlur = undefined;
    return _this3;
  }

  var _proto2 = RadioGroup.prototype;

  _proto2.componentDidMount = function componentDidMount() {
    this.evalValidity();
  };

  _proto2._onFocus = function _onFocus() {};

  _proto2._onBlur = function _onBlur() {};

  _proto2._onChange = function _onChange(e) {
    this.evalValidity();
    this.props.onChange && this.props.onChange(e);

    if (!this.state.isDirty) {
      this.setState({
        isDirty: true
      });
    }
  };

  return RadioGroup;
}(addWrapperToField(RadioGroupElement, 'RadioGroup'));

var Radio =
/*#__PURE__*/
function (_React$PureComponent2) {
  inheritsLoose(Radio, _React$PureComponent2);

  function Radio(props) {
    var _this4;

    _this4 = _React$PureComponent2.call(this, props) || this;
    _this4.state = {
      isChecked: _this4.props.isChecked || _this4.props.defaultChecked || false
    };
    _this4.toggleSelect = jsAwesomeUtils_2(_this4._toggleSelect.bind(assertThisInitialized(_this4)), 50);
    return _this4;
  }

  var _proto3 = Radio.prototype;

  _proto3.componentWillUpdate = function componentWillUpdate(nextProps) {
    if (this.props.isChecked !== nextProps.isChecked) {
      this.setState({
        isChecked: nextProps.isChecked
      });
    }
  };

  _proto3._toggleSelect = function _toggleSelect(e) {
    var isChecked = !this.state.isChecked;
    this.setState({
      isChecked: isChecked
    });
    this.props.onChange && this.props.onChange({
      value: this.props.value,
      isChecked: isChecked
    });
  };

  _proto3.render = function render() {
    var _this$props2 = this.props,
        isChecked = _this$props2.isChecked,
        disabled = _this$props2.disabled;
    return React.createElement("label", {
      className: "Field-el",
      onClick: disabled ? undefined : this.toggleSelect
    }, React.createElement("input", {
      type: "checkbox",
      checked: isChecked,
      hidden: true,
      readOnly: true,
      disabled: disabled
    }), React.createElement("span", {
      className: "Radio-mark"
    }), React.createElement("span", {
      className: "Radio-label"
    }, this.props.children));
  };

  return Radio;
}(React.PureComponent);

/*
 *
 *
 * */

var CheckboxElement =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(CheckboxElement, _React$PureComponent);

  function CheckboxElement() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto = CheckboxElement.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        className = _this$props.className,
        children = _this$props.children,
        isSwitch = _this$props.isSwitch,
        restProps = objectWithoutPropertiesLoose(_this$props, ["className", "children", "isSwitch"]);

    return React.createElement("div", {
      className: getFieldClasses(assign$1({}, this.props, {
        className: jsAwesomeUtils_1('Checkbox', className, isSwitch && 'Checkbox--Switch')
      }))
    }, React.createElement("label", {
      className: "Field-el"
    }, React.createElement("input", _extends_1({}, restProps, {
      type: "checkbox",
      hidden: true
    })), React.createElement("span", {
      className: "Checkbox-mark"
    }), React.createElement("span", {
      className: "Checkbox-label"
    }, children)));
  };

  return CheckboxElement;
}(React.PureComponent);
/*
 *
 *
 * */

var Checkbox = addWrapperToField(CheckboxElement, 'Checkbox');

var core_getIterator = _core.getIterator = function (it) {
  var iterFn = core_getIteratorMethod$1(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return _anObject(iterFn.call(it));
};

var getIterator = core_getIterator;

var getIterator$1 = getIterator;

// 7.2.2 IsArray(argument)

var _isArray = Array.isArray || function isArray(arg) {
  return _cof(arg) == 'Array';
};

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)


_export(_export.S, 'Array', { isArray: _isArray });

var isArray = _core.Array.isArray;

var isArray$1 = isArray;

var $JSON = _core.JSON || (_core.JSON = { stringify: JSON.stringify });
var stringify = function stringify(it) { // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};

var stringify$1 = stringify;

/*
* Handle placeholder required, etc.
* */

var SelectElement =
/*#__PURE__*/
function (_Dropdown) {
  inheritsLoose(SelectElement, _Dropdown);

  function SelectElement(props) {
    var _this;

    _this = _Dropdown.call(this, props) || this;

    _this.setRef = function (e) {
      return _this.optionsBody = e;
    };

    var selectedOption = _this.getOptionFromValue(props.defaultValue); // defaultValue = null / invalid, nothing to be selected


    _this._options = stringify$1(props.options); // One time, so no significant performance issues.

    _this.state.selectedOption = selectedOption;
    _this.state.options = JSON.parse(_this._options);
    _this.onSelect = _this._onSelect.bind(assertThisInitialized(_this));
    _this.searchInOptions = _this._searchInOptions.bind(assertThisInitialized(_this));
    _this.filterOptions = jsAwesomeUtils_2(_this._filterOptions, 100);
    return _this;
  }

  var _proto = SelectElement.prototype;

  _proto.getOptionFromValue = function getOptionFromValue(val) {
    var option = null;

    for (var _iterator = this.props.options, _isArray = isArray$1(_iterator), _i = 0, _iterator = _isArray ? _iterator : getIterator$1(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var o = _ref;
      var isNested = o.options && o.options instanceof Array;

      if (isNested) {
        for (var _iterator2 = o.options, _isArray2 = isArray$1(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : getIterator$1(_iterator2);;) {
          var _ref2;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref2 = _i2.value;
          }

          var so = _ref2;

          if (so.value === val) {
            option = so;
            break;
          }
        }
      } else if (o.value === val) {
        option = o;
        break;
      }
    }

    return option;
  };

  _proto._onSelect = function _onSelect(option) {
    this.setState({
      selectedOption: option,
      show: false
    });
  };

  _proto._searchInOptions = function _searchInOptions(e) {
    var search = e.target.value;
    this.filterOptions(search);
  };

  _proto._filterOptions = function _filterOptions(search) {
    var options = JSON.parse(this._options);

    if (search) {
      var searchKeys = this.props.searchKeys || ['name'];
      search = search.toLowerCase();
      options = options.filter(function (o) {
        var _loop2 = function _loop2() {
          if (_isArray3) {
            if (_i3 >= _iterator3.length) return "break";
            _ref3 = _iterator3[_i3++];
          } else {
            _i3 = _iterator3.next();
            if (_i3.done) return "break";
            _ref3 = _i3.value;
          }

          var k = _ref3;
          var isNested = o.options && o.options instanceof Array;

          if (isNested) {
            if (!o.options.length) {
              return {
                v: false
              };
            }

            var subOptions = o.options.filter(function (so) {
              if (so.hasOwnProperty(k) && so[k].toLowerCase().indexOf(search) > -1) {
                return true;
              }
            });

            if (subOptions.length) {
              o.options = subOptions;
              return {
                v: true
              };
            }

            return {
              v: false
            };
          } else {
            if (o.hasOwnProperty(k) && o[k].toLowerCase().indexOf(search) > -1) {
              return {
                v: true
              };
            }
          }
        };

        _loop: for (var _iterator3 = searchKeys, _isArray3 = isArray$1(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : getIterator$1(_iterator3);;) {
          var _ref3;

          var _ret = _loop2();

          switch (_ret) {
            case "break":
              break _loop;

            default:
              if (typeof _ret === "object") return _ret.v;
          }
        }
      });
    }

    this.setState({
      options: options
    });
  };

  _proto.render = function render() {
    var _this2 = this;

    var _this$props = this.props,
        name = _this$props.name,
        className = _this$props.className,
        disabled = _this$props.disabled,
        beforeOptions = _this$props.beforeOptions,
        afterOptions = _this$props.afterOptions,
        enableSearch = _this$props.enableSearch;
    var _this$state = this.state,
        options = _this$state.options,
        selectedOption = _this$state.selectedOption,
        show = _this$state.show;
    return React.createElement(OutsideClickLayer, {
      onOutsideClick: function onOutsideClick(_) {
        return _this2.setState({
          show: false
        });
      },
      enabled: true
    }, React.createElement("div", {
      className: getFieldClasses(assign$1({}, this.props, {
        className: jsAwesomeUtils_1('Select', show && 'Select--show', className)
      }))
    }, React.createElement("input", {
      name: name,
      value: selectedOption ? selectedOption.value : '',
      hidden: true,
      readOnly: true
    }), React.createElement("div", {
      className: "Field-el Select-trigger",
      onClick: disabled ? undefined : this.toggleDropdown
    }, selectedOption && React.createElement(SelectedOption, {
      option: selectedOption
    })), show && React.createElement(DropdownOptions, {
      elRef: this.setRef,
      closeDropdown: this.closeDropdown,
      beforeOptions: enableSearch ? React.createElement(InputElement, {
        onChange: this.searchInOptions,
        autoFocus: true
      }) : beforeOptions,
      afterOptions: afterOptions
    }, React.createElement(Options, {
      options: options,
      highlightOption: selectedOption,
      onSelect: disabled ? undefined : this.onSelect
    }))));
  };

  return SelectElement;
}(Dropdown);
/*
 *
 *
 * */

var Select = addWrapperToField(SelectElement, 'Select');

var SelectedOption =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(SelectedOption, _React$PureComponent);

  function SelectedOption() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto2 = SelectedOption.prototype;

  _proto2.render = function render() {
    var option = this.props.option;
    return React.createElement("div", {
      className: "SelectedOption"
    }, option.name);
  };

  return SelectedOption;
}(React.PureComponent);

var Options =
/*#__PURE__*/
function (_React$PureComponent2) {
  inheritsLoose(Options, _React$PureComponent2);

  function Options() {
    var _this3;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this3 = _React$PureComponent2.call.apply(_React$PureComponent2, [this].concat(args)) || this;
    _this3.handleSelect = _this3._handleSelect.bind(assertThisInitialized(_this3));
    return _this3;
  }

  var _proto3 = Options.prototype;

  _proto3._handleSelect = function _handleSelect(option) {
    this.props.onSelect(option);
  };

  _proto3.getOption = function getOption(key, o, highlightOption) {
    var _this4 = this;

    return React.createElement(DropdownItem, {
      key: key,
      className: jsAwesomeUtils_1('Select-Option', highlightOption === o && 'Select-Option--highlight'),
      onClick: function onClick(_) {
        return _this4.handleSelect(o);
      }
    }, o.name);
  };

  _proto3.render = function render() {
    var _this5 = this;

    var _this$props2 = this.props,
        options = _this$props2.options,
        highlightOption = _this$props2.highlightOption;
    return options.map(function (o, ix) {
      var isNested = o.options && o.options instanceof Array;
      var opt;

      if (isNested) {
        if (!o.options.length) {
          return;
        }

        opt = React.createElement("div", {
          className: "Select-Option-group",
          key: o.label
        }, React.createElement("div", {
          className: "Select-Option-label"
        }, o.label), o.options.map(function (oy, iy) {
          return _this5.getOption('' + ix + iy, oy, highlightOption);
        }));
      } else {
        opt = _this5.getOption(ix, o, highlightOption);
      }

      return opt;
    });
  };

  return Options;
}(React.PureComponent);

/*
 *
 *
 * */

var SmoothScrollLink =
/*#__PURE__*/
function (_React$PureComponent) {
  inheritsLoose(SmoothScrollLink, _React$PureComponent);

  function SmoothScrollLink() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;

    _this.scrollToHash = function (e) {
      jsAwesomeUtils_10(e, _this.props.to);
    };

    return _this;
  }

  var _proto = SmoothScrollLink.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        to = _this$props.to,
        className = _this$props.className,
        children = _this$props.children;
    return React.createElement("a", {
      href: to,
      className: jsAwesomeUtils_1('SmoothScroll', className //  No prefixToClasses here
      ),
      onClick: this.scrollToHash
    }, children);
  };

  return SmoothScrollLink;
}(React.PureComponent);

/*
 *
 * */

var ErrorBoundary =
/*#__PURE__*/
function (_React$Component) {
  inheritsLoose(ErrorBoundary, _React$Component);

  function ErrorBoundary(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.state = {
      hasError: false
    };
    return _this;
  }

  ErrorBoundary.getDerivedStateFromError = function getDerivedStateFromError(error) {
    // Update state so the next render will show the fallback UI.
    return {
      hasError: true
    };
  };

  var _proto = ErrorBoundary.prototype;

  _proto.componentDidCatch = function componentDidCatch(error, info) {
    console.log('Catch error in Error Boundary..', error, info); // reportStackTrace(error, info); // TODO: Log the stack trace
  };

  _proto.render = function render() {
    if (this.state.hasError) {
      // You can render any custom fallback UI
      return React.createElement("div", {
        className: "ErrorBoundary"
      }, "Error Boundary render()", React.createElement("br", null), "Something went Wrong. This will be fixed shortly :)");
    }

    return this.props.children;
  };

  return ErrorBoundary;
}(React.Component);

/*
*
* Note:
* 1. Following components needs to be imported manually, as they need image/svg loader.
* 2. SocialMeta needs image loader, however, BasicMeta is opted out to keep it consistent in import as SocialMeta
* 3. Icon need svg loader, and bundle all assets is not possible, it's good to import it separately so that only the used svg assets are bundled.
* */

/*
  export { BasicMeta } from './Meta/BasicMeta';
  export { SocialMeta } from './Meta/SocialMeta';
  export Icon from './Icon/Icon';
*/

export { AsyncButton, AutoRemoveLayer, BackDrop, Banner, Button, Card, Checkbox, CheckboxElement, ClipboardWithButton, ClipboardWithTooltip, Dropdown, DropdownItem, ErrorBoundary, EscPressLayer, Form, GhostLoader, HelpText, Input, InputElement, NotificationsContainer, OutsideClickLayer, Popover, PopupsContainer, RadioGroup, RadioGroupElement, RipplePointer, Select, SelectElement, SmoothScrollLink, Spinner, Tag, TagsList, Textarea, TextareaElement, ToastsContainer, Tooltip, openConfirmPopup, openNotification, openPopup, openToast };
//# sourceMappingURL=index.min.js.map
